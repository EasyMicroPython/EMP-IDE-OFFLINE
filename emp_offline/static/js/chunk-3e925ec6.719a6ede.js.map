{"version":3,"sources":["webpack:///./src/pages/ide/emp.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_fix-re-wks.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/es6.regexp.split.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_is-regexp.js","webpack:///./src/pages/ide/components/Cli/ws.js"],"names":["funcName","func","split","deviceInfo","memoryStatus","memoryAnalysing","filename","concat","runScript","tree","getCode","newFile","delFile","newFolder","path","delFolder","rename","old","_new","install","pkg","hide","__webpack_require__","redefine","fails","defined","wks","module","exports","KEY","length","exec","SYMBOL","fns","strfn","rxfn","O","String","prototype","RegExp","string","arg","call","this","SPLIT","$split","isRegExp","_split","$push","push","$SPLIT","LENGTH","LAST_INDEX","NPCG","undefined","separator","limit","separator2","match","lastIndex","lastLength","i","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","splitLimit","separatorCopy","source","index","slice","replace","arguments","apply","test","fn","isObject","cof","MATCH","it","handleConnection","data","binaryState","recData","putFilename","putFileData","getFilename","getFileData","methods","onOpen","term","focus","write","ws","onmessage","onMessage","send","passwd","emp","$toast","success","readyState","$send","SIGNAL_REPORT_CONNECTED","wsConnected","event","_this","ArrayBuffer","Uint8Array","decodeResp","offset","SIGNAL_UNLOCK","putFileName","error","setTimeout","SIGNAL_PUT_NEXT_FILE","slotClearTerm","rec","sz","new_buf","set","code","TextDecoder","decode","SIGNAL_SHOW_CODES","JSON","parse","SIGNAL_UPDATE_TREE","SIGNAL_UPDATE_FINDER","SIGNAL_SHOW_PANE","SIGNAL_SHOW_CODES_PMAX","SIGNAL_DEPENDS_ON_MEMORY_TO_GET_FILE","SIGNAL_SHOW_SYS_INFO","SIGNAL_SHOW_MEMORY_STATUS","e","indexOf","onClose","SIGNAL_REPORT_DISCONNECTED","charCodeAt"],"mappings":"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","file":"js/chunk-3e925ec6.719a6ede.js","sourcesContent":["export const funcName = (func) => func('').split('(')[0]\n\nexport const deviceInfo = () => `device_info()\\r`\nexport const memoryStatus = () => `memory_status()\\r`\nexport const memoryAnalysing = (filename) => `memory_analysing('${filename}')\\r`\nexport const runScript = (filename) => `exec(open('${filename}').read())\\r`\nexport const tree = () => 'tree()\\r'\nexport const getCode = (filename) => `get_code('${filename}')\\r`\nexport const newFile = (filename) => `new_file('${filename}')\\r`\nexport const delFile = (filename) => `del_file('${filename}')\\r`\nexport const newFolder = (path) => `new_folder('${path}')\\r`\nexport const delFolder = (path) => `del_folder('${path}')\\r`\nexport const rename = (old, _new) => `rename('${old}','${_new}')\\r`\nexport const install = (pkg) => `emp_install('${pkg}')\\r`","'use strict';\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n  var fns = exec(defined, SYMBOL, ''[KEY]);\n  var strfn = fns[0];\n  var rxfn = fns[1];\n  if (fails(function () {\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  })) {\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split) {\n  'use strict';\n  var isRegExp = require('./_is-regexp');\n  var _split = $split;\n  var $push = [].push;\n  var $SPLIT = 'split';\n  var LENGTH = 'length';\n  var LAST_INDEX = 'lastIndex';\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n    // based on es5-shim implementation, need to rework it\n    $split = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return _split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var separator2, match, lastIndex, lastLength, i;\n      // Doesn't need flags gy, but they don't hurt\n      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n      while (match = separatorCopy.exec(string)) {\n        // `separatorCopy.lastIndex` is not reliable cross-browser\n        lastIndex = match.index + match[0][LENGTH];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n          // eslint-disable-next-line no-loop-func\n          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {\n            for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;\n          });\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    $split = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n    };\n  }\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return [function split(separator, limit) {\n    var O = defined(this);\n    var fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n  }, $split];\n});\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","import * as emp from \"../../emp\"\n\nvar handleConnection = {\n  data() {\n    return {\n      binaryState: 0,\n      recData: null,\n      putFilename: null,\n      putFileData: null,\n      getFilename: null,\n      getFileData: null\n    }\n  },\n\n  methods: {\n    onOpen: function () {\n      this.term.focus();\n      this.term.write(\"\\x1b[34;2mWelcome to 1ZLAB-EMPIDE!\\x1b[m\\r\\n\");\n\n      this.ws.onmessage = this.onMessage;\n      this.ws.send(this.passwd + '\\r');\n      // this.ws.send(\"tree()\\r\");\n      this.ws.send(emp.deviceInfo());\n      this.ws.send(emp.memoryStatus());\n      this.ws.send(emp.tree());\n      \n      this.$toast.success(\"WebREPL connected!\");\n      if (this.ws.readyState === 1) {\n        this.$send(this.SIGNAL_REPORT_CONNECTED(this));\n        this.wsConnected = true;\n      }\n\n    },\n\n    onMessage: function (event) {\n      if (event.data instanceof ArrayBuffer) {\n        var data = new Uint8Array(event.data);\n        switch (this.binaryState) {\n          case 11:\n            // first response for put\n            if (this.decodeResp(data) == 0) {\n              // send file data in chunks\n              for (\n                var offset = 0; offset < this.putFileData.length; offset += 1024\n              ) {\n                this.ws.send(this.putFileData.slice(offset, offset + 1024));\n              }\n              this.binaryState = 12;\n            }\n\n            break;\n          case 12:\n            // final response for put\n            this.$send(this.SIGNAL_UNLOCK(this));\n            if (this.decodeResp(data) == 0) {\n              this.$toast.success(\n                \"success! \" +\n                this.putFileName +\n                \", \" +\n                this.putFileData.length +\n                \" bytes\"\n              );\n              this.putFileData = null;\n              this.putFileName = \"\";\n            } else {\n              this.$toast.error(\"Failed sending \" + this.putFileName);\n            }\n            this.binaryState = 0;\n            this.ws.send('\\r\\r');\n            // this.ws.send('tree()\\r');\n            this.ws.send(emp.tree());\n            setTimeout(() => this.$send(this.SIGNAL_PUT_NEXT_FILE(this)), 300);\n            setTimeout(() => this.slotClearTerm(), 300);\n\n            break;\n\n          case 21:\n            // first response for get\n            if (this.decodeResp(data) == 0) {\n              this.binaryState = 22;\n              let rec = new Uint8Array(1);\n              rec[0] = 0;\n              this.ws.send(rec);\n            }\n            break;\n\n          case 22:\n            {\n              // file data\n              var sz = data[0] | (data[1] << 8);\n              if (data.length == 2 + sz) {\n                // we assume that the data comes in single chunks\n                if (sz == 0) {\n                  // end of file\n                  this.binaryState = 23;\n                } else {\n                  // accumulate incoming data to this.getFileData\n                  var new_buf = new Uint8Array(this.getFileData.length + sz);\n                  new_buf.set(this.getFileData);\n                  new_buf.set(data.slice(2), this.getFileData.length);\n                  this.getFileData = new_buf;\n                  // this.$toast.info('Getting ' + this.getFilename + ', ' + this.getFileData.length + ' bytes');\n                  var rec = new Uint8Array(1);\n                  rec[0] = 0;\n                  this.ws.send(rec);\n                }\n              } else {\n                this.binaryState = 0;\n              }\n              break;\n            }\n          case 23:\n            // final response\n            // this.$send(this.SIGNAL_UNLOCK(this)); 为什么在这里无法调用 send函数? \n            if (this.decodeResp(data) == 0) {\n              this.$toast.success('Got ' + this.getFilename + ', ' + this.getFileData.length + ' bytes');\n              var code = new TextDecoder(\"utf-8\").decode(this.getFileData);\n              this.$send(this.SIGNAL_SHOW_CODES(this, code));\n\n            } else {\n              this.$toast.error('Failed getting ' + this.getFilename);\n            }\n            this.getFileData = null;\n            this.getFilename = null;\n            this.binaryState = 0;\n            this.ws.send('\\r\\r');\n\n            setTimeout(() => this.slotClearTerm(), 300);\n            break;\n        }\n      }\n\n      try {\n        this.recData = JSON.parse(event.data);\n        if (this.recData.func === emp.funcName(emp.tree)) {\n          this.$send(this.SIGNAL_UPDATE_TREE(this, [this.recData.data]));\n          this.$send(this.SIGNAL_UPDATE_FINDER(this, this.recData.data));\n          this.$send(this.SIGNAL_SHOW_PANE(this));\n        }\n        if (this.recData.func === emp.funcName(emp.getCode))\n          this.$send(this.SIGNAL_SHOW_CODES_PMAX(this, this.recData.data));\n        if (this.recData.func === emp.funcName(emp.memoryAnalysing))\n          this.$send(this.SIGNAL_DEPENDS_ON_MEMORY_TO_GET_FILE(this, this.recData.data));\n        if (this.recData.func === emp.funcName(emp.deviceInfo)) \n          this.$send(this.SIGNAL_SHOW_SYS_INFO(this, this.recData.data));\n        if (this.recData.func === emp.funcName(emp.memoryStatus))\n          this.$send(this.SIGNAL_SHOW_MEMORY_STATUS(this, this.recData.data));\n      } catch (e) {\n        // 容错处理放在这儿\n        if (event.data.indexOf('Traceback (most recent call last):') >= 0) {\n          this.$send(this.SIGNAL_UNLOCK(this));\n        }\n      }\n    },\n\n    onClose: function () {\n      this.wsConnected = false;\n      this.$send(this.SIGNAL_REPORT_DISCONNECTED(this));\n      this.$toast.error(\"Disconnected\");\n      if (this.term) {\n        this.term.write(\"\\r\\n\\x1b[31mDisconnected\\x1b[m\\r\\n\");\n      }\n    },\n\n\n    decodeResp(data) {\n      if (data[0] == \"W\".charCodeAt(0) && data[1] == \"B\".charCodeAt(0)) {\n        var code = data[2] | (data[3] << 8);\n        return code;\n      } else {\n        return -1;\n      }\n    },\n\n  },\n\n}\n\nexport default handleConnection\n"],"sourceRoot":""}