{"version":3,"sources":["webpack:///./src/pages/ide/emp.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_regexp-exec-abstract.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_is-regexp.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_fix-re-wks.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_regexp-exec.js","webpack:///./src/pages/ide/components/Cli/slots.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_advance-string-index.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_flags.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_string-context.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/es6.regexp.exec.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/es6.regexp.split.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_string-at.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/es6.string.starts-with.js"],"names":["funcName","func","split","deviceInfo","memoryStatus","memoryAnalysing","filename","concat","runScript","tree","getCode","newFile","delFile","newFolder","path","delFolder","rename","old","_new","install","pkg","MATCH","__webpack_require__","module","exports","KEY","re","e","f","classof","builtinExec","RegExp","prototype","exec","R","S","result","call","TypeError","isObject","cof","it","isRegExp","undefined","redefine","hide","fails","defined","wks","regexpExec","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","groups","a","replace","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","apply","this","arguments","length","SYMBOL","DELEGATES_TO_SYMBOL","O","DELEGATES_TO_EXEC","execCalled","constructor","nativeRegExpMethod","fns","nativeMethod","regexp","str","arg2","forceStringMethod","done","value","strfn","rxfn","String","string","arg","regexpFlags","nativeExec","nativeReplace","patchedExec","LAST_INDEX","UPDATES_LAST_INDEX_WRONG","re1","re2","NPCG_INCLUDED","PATCH","lastIndex","reCopy","match","i","source","global","index","slots","methods","slotToggleTermVisible","termVisible","slotToggleConfig","showConfig","slotResizeTerm","term","fit","slotClearTerm","clear","slotConnectToDevice","kwargs","passwd","url","lastCmd","ws","WebSocket","binaryType","attach","onopen","onOpen","onclose","onClose","slotDisconnect","close","slotSendCommands","tasklock","$toast","error","send","command","startsWith","emp","$send","SIGNAL_LOCK","slotPutFile","fileData","putFileData","TextEncoder","encode","dest_fname","dest_fsize","rec","Uint8Array","charCodeAt","binaryState","info","slotGetFile","src_fname","getFilename","getFileData","slotDependsOnMemoryToGetFile","mf","fsize","at","unicode","anObject","that","ignoreCase","multiline","sticky","searchString","NAME","target","proto","forced","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","$min","Math","min","$push","push","$SPLIT","LENGTH","SUPPORTS_Y","SPLIT","$split","maybeCallNative","internalSplit","separator","limit","lastLength","output","flags","lastLastIndex","splitLimit","separatorCopy","slice","test","splitter","res","rx","C","unicodeMatching","lim","p","q","A","z","toInteger","TO_STRING","pos","b","s","l","charAt","$export","context","STARTS_WITH","$startsWith","P","F","search"],"mappings":"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","file":"js/chunk-475760ca.75abbf5b.js","sourcesContent":["export const funcName = (func) => func('').split('(')[0]\n\nexport const deviceInfo = () => `device_info()\\r`\nexport const memoryStatus = () => `memory_status()\\r`\nexport const memoryAnalysing = (filename) => `memory_analysing('${filename}')\\r`\nexport const runScript = (filename) => `exec(open('${filename}').read())\\r`\nexport const tree = () => 'tree()\\r'\nexport const getCode = (filename) => `get_code('${filename}')\\r`\nexport const newFile = (filename) => `new_file('${filename}')\\r`\nexport const delFile = (filename) => `del_file('${filename}')\\r`\nexport const newFolder = (path) => `new_folder('${path}')\\r`\nexport const delFolder = (path) => `del_folder('${path}')\\r`\nexport const rename = (old, _new) => `rename('${old}','${_new}')\\r`\nexport const install = (pkg) => `emp_install('${pkg}')\\r`","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","'use strict';\n\nvar classof = require('./_classof');\nvar builtinExec = RegExp.prototype.exec;\n\n // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n  return builtinExec.call(R, S);\n};\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","'use strict';\nrequire('./es6.regexp.exec');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\nvar regexpExec = require('./_regexp-exec');\n\nvar SPECIES = wks('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {\n  // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length === 2 && result[0] === 'a' && result[1] === 'b';\n})();\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n    re.exec = function () { execCalled = true; return null; };\n    if (KEY === 'split') {\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n    }\n    re[SYMBOL]('');\n    return !execCalled;\n  }) : undefined;\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var fns = exec(\n      defined,\n      SYMBOL,\n      ''[KEY],\n      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {\n        if (regexp.exec === regexpExec) {\n          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n            // The native String method already delegates to @@method (this\n            // polyfilled function), leasing to infinite recursion.\n            // We avoid it by directly calling the native @@method method.\n            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n          }\n          return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n        }\n        return { done: false };\n      }\n    );\n    var strfn = fns[0];\n    var rxfn = fns[1];\n\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","'use strict';\n\nvar regexpFlags = require('./_flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar LAST_INDEX = 'lastIndex';\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/,\n      re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      // eslint-disable-next-line no-loop-func\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","import * as emp from \"../../emp.js\";\n\n\nvar slots = {\n  methods: {\n    slotToggleTermVisible() {\n      this.termVisible = !this.termVisible;\n    },\n\n    slotToggleConfig() {\n      this.showConfig = !this.showConfig;\n    },\n\n    slotResizeTerm() {\n      // this.term.resize(20,1);\n      this.term.fit();\n    },\n\n    slotClearTerm() {\n      this.term.clear();\n    },\n\n    slotConnectToDevice(kwargs) {\n      this.passwd = kwargs.passwd;\n      var url = kwargs.url;\n      this.lastCmd = \"connect\";\n      this.ws = new WebSocket(url);\n      this.ws.binaryType = \"arraybuffer\";\n      this.term.attach(this.ws, true, true);\n\n      this.ws.onopen = this.onOpen;\n      this.ws.onclose = this.onClose;\n    },\n\n    slotDisconnect() {\n      this.ws.close();\n    },\n\n    slotSendCommands(kwargs) {\n      if (!this.tasklock) {\n        this.ws.send(kwargs.command);\n        if (kwargs.command.startsWith(emp.funcName(emp.memoryAnalysing))) {\n          this.$send(this.SIGNAL_LOCK(this));\n        }\n      } else\n        this.$toast.error(\"IO busy\");\n    },\n\n    slotPutFile(kwargs) {\n      if (!this.tasklock) {\n        if (kwargs.fileData.length > 0)\n          this.putFileData = kwargs.fileData;\n        else {\n          this.putFileData = new TextEncoder().encode(' ');\n          kwargs.fileData = new TextEncoder().encode(' ');\n        }\n\n        var dest_fname = kwargs.filename;\n        var dest_fsize = kwargs.fileData.length;\n\n        // WEBREPL_FILE = \"<2sBBQLH64s\"\n        var rec = new Uint8Array(2 + 1 + 1 + 8 + 4 + 2 + 64);\n        rec[0] = \"W\".charCodeAt(0);\n        rec[1] = \"A\".charCodeAt(0);\n        rec[2] = 1; // put\n        rec[3] = 0;\n        rec[4] = 0;\n        rec[5] = 0;\n        rec[6] = 0;\n        rec[7] = 0;\n        rec[8] = 0;\n        rec[9] = 0;\n        rec[10] = 0;\n        rec[11] = 0;\n        rec[12] = dest_fsize & 0xff;\n        rec[13] = (dest_fsize >> 8) & 0xff;\n        rec[14] = (dest_fsize >> 16) & 0xff;\n        rec[15] = (dest_fsize >> 24) & 0xff;\n        rec[16] = dest_fname.length & 0xff;\n        rec[17] = (dest_fname.length >> 8) & 0xff;\n        for (var i = 0; i < 64; ++i) {\n          if (i < dest_fname.length) {\n            rec[18 + i] = dest_fname.charCodeAt(i);\n          } else {\n            rec[18 + i] = 0;\n          }\n        }\n\n        // initiate put\n        this.binaryState = 11;\n        // this.show_message(\"Sending \" + put_file_name + \"...\");\n        this.$toast.info(\"Sending \" + kwargs.filename + \"...\");\n        this.$send(this.SIGNAL_LOCK(this));\n        this.ws.send(rec);\n      } else {\n        this.$toast.error(\"IO busy\");\n      }\n    },\n\n    slotGetFile(kwargs) {\n      var src_fname = kwargs.filename;\n      // WEBREPL_FILE = \"<2sBBQLH64s\"\n      var rec = new Uint8Array(2 + 1 + 1 + 8 + 4 + 2 + 64);\n      rec[0] = 'W'.charCodeAt(0);\n      rec[1] = 'A'.charCodeAt(0);\n      rec[2] = 2; // get\n      rec[3] = 0;\n      rec[4] = 0;\n      rec[5] = 0;\n      rec[6] = 0;\n      rec[7] = 0;\n      rec[8] = 0;\n      rec[9] = 0;\n      rec[10] = 0;\n      rec[11] = 0;\n      rec[12] = 0;\n      rec[13] = 0;\n      rec[14] = 0;\n      rec[15] = 0;\n      rec[16] = src_fname.length & 0xff;\n      rec[17] = (src_fname.length >> 8) & 0xff;\n      for (var i = 0; i < 64; ++i) {\n        if (i < src_fname.length) {\n          rec[18 + i] = src_fname.charCodeAt(i);\n        } else {\n          rec[18 + i] = 0;\n        }\n      }\n      // initiate get\n      this.binaryState = 21;\n      this.getFilename = src_fname;\n      this.getFileData = new Uint8Array(0);\n      this.$toast.info('Getting ' + this.getFilename + '...');\n      this.ws.send(rec);\n    },\n\n    slotDependsOnMemoryToGetFile(kwargs) {\n      this.getFilename = kwargs.filename;\n\n      var mf = kwargs.mf;\n\n      var fsize = kwargs.fsize;\n\n      if (fsize < 0.85 * mf) {\n        // this.ws.send('get_code(\\'' + kwargs.filename + '\\')\\r');\n        this.ws.send(emp.getCode(kwargs.filename));\n      } else {\n        this.slotGetFile(kwargs);\n      }\n    },\n\n  }\n}\n\nexport default slots\n","'use strict';\nvar at = require('./_string-at')(true);\n\n // `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? at(S, index).length : 1);\n};\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","'use strict';\nvar regexpExec = require('./_regexp-exec');\nrequire('./_export')({\n  target: 'RegExp',\n  proto: true,\n  forced: regexpExec !== /./.exec\n}, {\n  exec: regexpExec\n});\n","'use strict';\n\nvar isRegExp = require('./_is-regexp');\nvar anObject = require('./_an-object');\nvar speciesConstructor = require('./_species-constructor');\nvar advanceStringIndex = require('./_advance-string-index');\nvar toLength = require('./_to-length');\nvar callRegExpExec = require('./_regexp-exec-abstract');\nvar regexpExec = require('./_regexp-exec');\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\n\n// eslint-disable-next-line no-empty\nvar SUPPORTS_Y = !!(function () { try { return new RegExp('x', 'y'); } catch (e) {} })();\n\n// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit = $split;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                    (rx.multiline ? 'm' : '') +\n                    (rx.unicode ? 'u' : '') +\n                    (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? 0xffffffff : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n"],"sourceRoot":""}