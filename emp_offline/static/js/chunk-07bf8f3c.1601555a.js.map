{"version":3,"sources":["webpack:///./src/pages/ide/emp.js","webpack:///./src/pages/ide/components/FolderTree/slots.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/es6.array.sort.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_regexp-exec-abstract.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/es6.function.name.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_is-regexp.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_fix-re-wks.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_regexp-exec.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_strict-method.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_advance-string-index.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_flags.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/es6.regexp.exec.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/es6.regexp.split.js","webpack:///./node_modules/_core-js@2.6.0@core-js/modules/_string-at.js"],"names":["funcName","func","split","deviceInfo","memoryStatus","memoryAnalysing","filename","concat","runScript","tree","getCode","newFile","delFile","newFolder","path","delFolder","rename","old","_new","install","pkg","slots","methods","slotUpdateTree","kwargs","_this","this","treeData","children","sort","s1","s2","x1","name","toUpperCase","x2","data","setTimeout","$send","SIGNAL_CLEAR","slotRunCurrentScript","currentNode","SIGNAL_SEND_COMMAND","emp","$toast","error","$export","__webpack_require__","aFunction","toObject","fails","$sort","test","P","F","undefined","comparefn","call","classof","builtinExec","RegExp","prototype","exec","module","exports","R","S","result","TypeError","dP","f","FProto","Function","nameRE","NAME","configurable","get","match","e","isObject","cof","MATCH","it","isRegExp","redefine","hide","defined","wks","regexpExec","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","re","groups","a","replace","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","apply","arguments","length","KEY","SYMBOL","DELEGATES_TO_SYMBOL","O","DELEGATES_TO_EXEC","execCalled","constructor","nativeRegExpMethod","fns","nativeMethod","regexp","str","arg2","forceStringMethod","done","value","strfn","rxfn","String","string","arg","regexpFlags","nativeExec","nativeReplace","patchedExec","LAST_INDEX","UPDATES_LAST_INDEX_WRONG","re1","re2","NPCG_INCLUDED","PATCH","lastIndex","reCopy","i","source","global","index","method","at","unicode","anObject","that","ignoreCase","multiline","sticky","target","proto","forced","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","$min","Math","min","$push","push","$SPLIT","LENGTH","SUPPORTS_Y","SPLIT","$split","maybeCallNative","internalSplit","separator","limit","lastLength","output","flags","lastLastIndex","splitLimit","separatorCopy","slice","splitter","res","rx","C","unicodeMatching","lim","p","q","A","z","toInteger","TO_STRING","pos","b","s","l","charCodeAt","charAt"],"mappings":"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","file":"js/chunk-07bf8f3c.1601555a.js","sourcesContent":["export const funcName = (func) => func('').split('(')[0]\n\nexport const deviceInfo = () => `device_info()\\r`\nexport const memoryStatus = () => `memory_status()\\r`\nexport const memoryAnalysing = (filename) => `memory_analysing('${filename}')\\r`\nexport const runScript = (filename) => `exec(open('${filename}').read())\\r`\nexport const tree = () => 'tree()\\r'\nexport const getCode = (filename) => `get_code('${filename}')\\r`\nexport const newFile = (filename) => `new_file('${filename}')\\r`\nexport const delFile = (filename) => `del_file('${filename}')\\r`\nexport const newFolder = (path) => `new_folder('${path}')\\r`\nexport const delFolder = (path) => `del_folder('${path}')\\r`\nexport const rename = (old, _new) => `rename('${old}','${_new}')\\r`\nexport const install = (pkg) => `emp_install('${pkg}')\\r`","import * as emp from \"../../emp\";\nvar slots = {\n  methods: {\n    //打开设置窗口,点击设置按钮时触发\n    slotUpdateTree(kwargs) {\n      \n      kwargs.treeData[0].children.sort(function (s1, s2) {\n        let x1 = s1.name.toUpperCase();\n        let x2 = s2.name.toUpperCase();\n        if (x1 < x2) {\n          return -1;\n        }\n        if (x1 > x2) {\n          return 1;\n        }\n        return 0;\n      });\n      this.data = kwargs.treeData;\n      setTimeout(() => this.$send(this.SIGNAL_CLEAR(this)), 300);\n    },\n\n    slotRunCurrentScript(){\n      if(this.currentNode != null)\n        this.$send(this.SIGNAL_SEND_COMMAND(this,emp.runScript(this.currentNode.name)))\n      else\n        this.$toast.error('No file opened!')\n    }\n\n  }\n}\n\nexport default slots\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","'use strict';\n\nvar classof = require('./_classof');\nvar builtinExec = RegExp.prototype.exec;\n\n // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n  return builtinExec.call(R, S);\n};\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","'use strict';\nrequire('./es6.regexp.exec');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\nvar regexpExec = require('./_regexp-exec');\n\nvar SPECIES = wks('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {\n  // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length === 2 && result[0] === 'a' && result[1] === 'b';\n})();\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n    re.exec = function () { execCalled = true; return null; };\n    if (KEY === 'split') {\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n    }\n    re[SYMBOL]('');\n    return !execCalled;\n  }) : undefined;\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var fns = exec(\n      defined,\n      SYMBOL,\n      ''[KEY],\n      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {\n        if (regexp.exec === regexpExec) {\n          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n            // The native String method already delegates to @@method (this\n            // polyfilled function), leasing to infinite recursion.\n            // We avoid it by directly calling the native @@method method.\n            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n          }\n          return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n        }\n        return { done: false };\n      }\n    );\n    var strfn = fns[0];\n    var rxfn = fns[1];\n\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","'use strict';\n\nvar regexpFlags = require('./_flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar LAST_INDEX = 'lastIndex';\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/,\n      re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      // eslint-disable-next-line no-loop-func\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","'use strict';\nvar at = require('./_string-at')(true);\n\n // `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? at(S, index).length : 1);\n};\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nvar regexpExec = require('./_regexp-exec');\nrequire('./_export')({\n  target: 'RegExp',\n  proto: true,\n  forced: regexpExec !== /./.exec\n}, {\n  exec: regexpExec\n});\n","'use strict';\n\nvar isRegExp = require('./_is-regexp');\nvar anObject = require('./_an-object');\nvar speciesConstructor = require('./_species-constructor');\nvar advanceStringIndex = require('./_advance-string-index');\nvar toLength = require('./_to-length');\nvar callRegExpExec = require('./_regexp-exec-abstract');\nvar regexpExec = require('./_regexp-exec');\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\n\n// eslint-disable-next-line no-empty\nvar SUPPORTS_Y = !!(function () { try { return new RegExp('x', 'y'); } catch (e) {} })();\n\n// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit = $split;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                    (rx.multiline ? 'm' : '') +\n                    (rx.unicode ? 'u' : '') +\n                    (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? 0xffffffff : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n"],"sourceRoot":""}