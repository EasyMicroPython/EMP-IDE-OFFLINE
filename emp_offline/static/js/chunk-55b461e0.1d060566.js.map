{"version":3,"sources":["webpack:///./src/pages/ide/emp.js","webpack:///./src/pages/ide/components/SideBar/signals.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_fix-re-wks.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/es6.regexp.split.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_is-regexp.js"],"names":["funcName","func","split","deviceInfo","memoryStatus","memoryAnalysing","filename","concat","runScript","tree","getCode","newFile","delFile","newFolder","path","delFolder","rename","old","_new","install","pkg","__webpack_require__","r","__webpack_exports__","_emp__WEBPACK_IMPORTED_MODULE_0__","signals","methods","SIGNAL_OPENSET","sender","receiver","arguments","length","undefined","slot","event","kwargs","SIGNAL_CLEAR","SIGNAL_SWITCH","index","this","SIGNAL_OPEN_CONFIG","SIGNAL_RUN","SIGNAL_TOGGLE_PANE","SIGNAL_SHOW_PANE","SIGNAL_GC_COLLECT","command","emp","hide","redefine","fails","defined","wks","module","exports","KEY","exec","SYMBOL","fns","strfn","rxfn","O","String","prototype","RegExp","string","arg","call","SPLIT","$split","isRegExp","_split","$push","push","$SPLIT","LENGTH","LAST_INDEX","NPCG","separator","limit","separator2","match","lastIndex","lastLength","i","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","splitLimit","separatorCopy","source","slice","replace","apply","test","fn","isObject","cof","MATCH","it"],"mappings":"ypBAAaA,EAAW,SAACC,GAAD,OAAUA,EAAK,IAAIC,MAAM,KAAK,IAEzCC,EAAa,oCACbC,EAAe,sCACfC,EAAkB,SAACC,GAAD,2BAAAC,OAAmCD,EAAnC,SAClBE,EAAY,SAACF,GAAD,oBAAAC,OAA4BD,EAA5B,iBACZG,EAAO,iBAAM,YACbC,EAAU,SAACJ,GAAD,mBAAAC,OAA2BD,EAA3B,SACVK,EAAU,SAACL,GAAD,mBAAAC,OAA2BD,EAA3B,SACVM,EAAU,SAACN,GAAD,mBAAAC,OAA2BD,EAA3B,SACVO,EAAY,SAACC,GAAD,qBAAAP,OAAyBO,EAAzB,SACZC,EAAY,SAACD,GAAD,qBAAAP,OAAyBO,EAAzB,SACZE,EAAS,SAACC,EAAKC,GAAN,iBAAAX,OAA0BU,EAA1B,OAAAV,OAAmCW,EAAnC,SACTC,EAAU,SAACC,GAAD,sBAAAb,OAAyBa,EAAzB,8CCbvBC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,QACII,EAAU,CACZC,QAAS,CAEPC,eAFO,SAEQC,GAA0D,IAAlDC,EAAkDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvC,SAAUG,EAA6BH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB,qBACjD,MAAO,CACLI,MAAO,UACPN,OAAQA,EACRC,SAAUA,EACVI,KAAMA,EACNE,OAAQ,KAGZC,aAXO,SAWMR,GAAkD,IAA1CC,EAA0CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/B,MAAOG,EAAwBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,gBAC5C,MAAO,CACLI,MAAO,YACPN,OAAQA,EACRC,SAAUA,EACVI,KAAMA,EACNE,OAAQ,KAIZE,cArBO,SAqBOT,GAAkD,IAA1CC,EAA0CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/B,SAAUG,EAAqBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,aAChD,MAAO,CACLI,MAAO,SACPN,OAAQA,EACRC,SAAUA,EACVI,KAAMA,EACNE,OAAQ,CACNG,MAAOC,KAAKD,SAIlBE,mBAhCO,SAgCYZ,GAAqD,IAA7CC,EAA6CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlC,MAAOG,EAA2BH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApB,mBAClD,MAAO,CACLI,MAAO,eACPN,OAAQA,EACRC,SAAUA,EACVI,KAAMA,EACNE,OAAQ,KAIZM,WA1CO,SA0CIb,GAAgE,IAAxDC,EAAwDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7C,aAAcG,EAA+BH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB,uBACjD,MAAO,CACLI,MAAO,mBACPN,OAAQA,EACRC,SAAUA,EACVI,KAAMA,EACNE,OAAQ,KAIZO,mBApDO,SAoDYd,GAA6D,IAArDC,EAAqDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1C,gBAAiBG,EAAyBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,iBAC5D,MAAO,CACLI,MAAO,WACPN,OAAQA,EACRC,SAAUA,EACVI,KAAMA,EACNE,OAAQ,KAIZQ,iBA9DO,SA8DUf,GAA2D,IAAnDC,EAAmDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxC,gBAAiBG,EAAuBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhB,eAC1D,MAAO,CACLI,MAAO,WACPN,OAAQA,EACRC,SAAUA,EACVI,KAAMA,EACNE,OAAQ,KAIZS,kBAxEO,SAwEWhB,GAAoD,IAA5CC,EAA4CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjC,MAAOG,EAA0BH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnB,mBACjD,MAAO,CACLI,MAAO,YACPN,OAAQA,EACRC,SAAUA,EACVI,KAAMA,EACNE,OAAQ,CACNU,QAASC,yBAQJrB,oDCxFf,IAAAsB,EAAW1B,EAAQ,QACnB2B,EAAe3B,EAAQ,QACvB4B,EAAY5B,EAAQ,QACpB6B,EAAc7B,EAAQ,QACtB8B,EAAU9B,EAAQ,QAElB+B,EAAAC,QAAA,SAAAC,EAAAvB,EAAAwB,GACA,IAAAC,EAAAL,EAAAG,GACAG,EAAAF,EAAAL,EAAAM,EAAA,GAAAF,IACAI,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAR,EAAA,WACA,IAAAW,EAAA,GAEA,OADAA,EAAAJ,GAAA,WAA6B,UAC7B,MAAAF,GAAAM,OAEAZ,EAAAa,OAAAC,UAAAR,EAAAI,GACAX,EAAAgB,OAAAD,UAAAN,EAAA,GAAAzB,EAGA,SAAAiC,EAAAC,GAAgC,OAAAN,EAAAO,KAAAF,EAAAzB,KAAA0B,IAGhC,SAAAD,GAA2B,OAAAL,EAAAO,KAAAF,EAAAzB,gCCvB3BlB,EAAQ,OAARA,CAAuB,mBAAA6B,EAAAiB,EAAAC,GACvB,aACA,IAAAC,EAAiBhD,EAAQ,QACzBiD,EAAAF,EACAG,EAAA,GAAAC,KACAC,EAAA,QACAC,EAAA,SACAC,EAAA,YACA,GACA,YAAAF,GAAA,YACA,UAAAA,GAAA,WAAAC,IACA,QAAAD,GAAA,WAAAC,IACA,OAAAD,GAAA,YAAAC,IACA,IAAAD,GAAA,QAAAC,GAAA,GACA,GAAAD,GAAA,MAAAC,GACA,CACA,IAAAE,OAAA5C,IAAA,OAAAuB,KAAA,OAEAa,EAAA,SAAAS,EAAAC,GACA,IAAAd,EAAAH,OAAAtB,MACA,QAAAP,IAAA6C,GAAA,IAAAC,EAAA,SAEA,IAAAT,EAAAQ,GAAA,OAAAP,EAAAJ,KAAAF,EAAAa,EAAAC,GACA,IASAC,EAAAC,EAAAC,EAAAC,EAAAC,EATAC,EAAA,GACAC,GAAAR,EAAAS,WAAA,SACAT,EAAAU,UAAA,SACAV,EAAAW,QAAA,SACAX,EAAAY,OAAA,QACAC,EAAA,EACAC,OAAA3D,IAAA8C,EAAA,WAAAA,IAAA,EAEAc,EAAA,IAAA7B,OAAAc,EAAAgB,OAAAR,EAAA,KAGAT,IAAAG,EAAA,IAAAhB,OAAA,IAAA6B,EAAAC,OAAA,WAAAR,IACA,MAAAL,EAAAY,EAAArC,KAAAS,GAAA,CAGA,GADAiB,EAAAD,EAAA1C,MAAA0C,EAAA,GAAAN,GACAO,EAAAS,IACAN,EAAAZ,KAAAR,EAAA8B,MAAAJ,EAAAV,EAAA1C,SAGAsC,GAAAI,EAAAN,GAAA,GAAAM,EAAA,GAAAe,QAAAhB,EAAA,WACA,IAAAI,EAAA,EAAuBA,EAAArD,UAAA4C,GAAA,EAA2BS,SAAAnD,IAAAF,UAAAqD,KAAAH,EAAAG,QAAAnD,KAElDgD,EAAAN,GAAA,GAAAM,EAAA1C,MAAA0B,EAAAU,IAAAH,EAAAyB,MAAAZ,EAAAJ,EAAAc,MAAA,IACAZ,EAAAF,EAAA,GAAAN,GACAgB,EAAAT,EACAG,EAAAV,IAAAiB,GAAA,MAEAC,EAAAjB,KAAAK,EAAA1C,OAAAsD,EAAAjB,KAKA,OAHAe,IAAA1B,EAAAU,IACAQ,GAAAU,EAAAK,KAAA,KAAAb,EAAAZ,KAAA,IACOY,EAAAZ,KAAAR,EAAA8B,MAAAJ,IACPN,EAAAV,GAAAiB,EAAAP,EAAAU,MAAA,EAAAH,GAAAP,OAGG,IAAAX,QAAAzC,EAAA,GAAA0C,KACHN,EAAA,SAAAS,EAAAC,GACA,YAAA9C,IAAA6C,GAAA,IAAAC,EAAA,GAAAR,EAAAJ,KAAA3B,KAAAsC,EAAAC,KAIA,gBAAAD,EAAAC,GACA,IAAAlB,EAAAV,EAAAX,MACA2D,OAAAlE,GAAA6C,OAAA7C,EAAA6C,EAAAV,GACA,YAAAnC,IAAAkE,IAAAhC,KAAAW,EAAAjB,EAAAkB,GAAAV,EAAAF,KAAAL,OAAAD,GAAAiB,EAAAC,IACGV,2BCpEH,IAAA+B,EAAe9E,EAAQ,QACvB+E,EAAU/E,EAAQ,QAClBgF,EAAYhF,EAAQ,OAARA,CAAgB,SAC5B+B,EAAAC,QAAA,SAAAiD,GACA,IAAAjC,EACA,OAAA8B,EAAAG,UAAAtE,KAAAqC,EAAAiC,EAAAD,MAAAhC,EAAA,UAAA+B,EAAAE","file":"js/chunk-55b461e0.1d060566.js","sourcesContent":["export const funcName = (func) => func('').split('(')[0]\n\nexport const deviceInfo = () => `device_info()\\r`\nexport const memoryStatus = () => `memory_status()\\r`\nexport const memoryAnalysing = (filename) => `memory_analysing('${filename}')\\r`\nexport const runScript = (filename) => `exec(open('${filename}').read())\\r`\nexport const tree = () => 'tree()\\r'\nexport const getCode = (filename) => `get_code('${filename}')\\r`\nexport const newFile = (filename) => `new_file('${filename}')\\r`\nexport const delFile = (filename) => `del_file('${filename}')\\r`\nexport const newFolder = (path) => `new_folder('${path}')\\r`\nexport const delFolder = (path) => `del_folder('${path}')\\r`\nexport const rename = (old, _new) => `rename('${old}','${_new}')\\r`\nexport const install = (pkg) => `emp_install('${pkg}')\\r`","import * as emp from \"../../emp\"\nvar signals = {\n  methods: {\n    // 打开设置窗口,点击设置按钮时触发\n    SIGNAL_OPENSET(sender, receiver = 'parent', slot = 'slotToggleSettings') {\n      return {\n        event: \"openset\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {}\n      }\n    },\n    SIGNAL_CLEAR(sender, receiver = 'cli', slot = 'slotClearTerm') {\n      return {\n        event: \"clearTerm\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {}\n      }\n    },\n\n    SIGNAL_SWITCH(sender, receiver = 'parent', slot = 'slotSwitch') {\n      return {\n        event: \"switch\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {\n          index: this.index\n        }\n      }\n    },\n    SIGNAL_OPEN_CONFIG(sender, receiver = 'cli', slot = 'slotToggleConfig') {\n      return {\n        event: \"toggleConfig\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {}\n      }\n    },\n\n    SIGNAL_RUN(sender, receiver = 'folderTree', slot = 'slotRunCurrentScript') {\n      return {\n        event: \"runCurrentScript\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {}\n      }\n    },\n\n    SIGNAL_TOGGLE_PANE(sender, receiver = 'splitVertical', slot = 'slotTogglePane') {\n      return {\n        event: \"showPane\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {}\n      }\n    },\n\n    SIGNAL_SHOW_PANE(sender, receiver = 'splitVertical', slot = 'slotShowPane') {\n      return {\n        event: \"hidePane\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {}\n      }\n    },\n\n    SIGNAL_GC_COLLECT(sender, receiver = 'cli', slot = 'slotSendCommands'){\n      return {\n        event: \"gcCollect\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {\n          command: emp.memoryStatus()\n        }\n      }\n    },\n\n  }\n}\n\nexport default signals\n","'use strict';\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n  var fns = exec(defined, SYMBOL, ''[KEY]);\n  var strfn = fns[0];\n  var rxfn = fns[1];\n  if (fails(function () {\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  })) {\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split) {\n  'use strict';\n  var isRegExp = require('./_is-regexp');\n  var _split = $split;\n  var $push = [].push;\n  var $SPLIT = 'split';\n  var LENGTH = 'length';\n  var LAST_INDEX = 'lastIndex';\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n    // based on es5-shim implementation, need to rework it\n    $split = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return _split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var separator2, match, lastIndex, lastLength, i;\n      // Doesn't need flags gy, but they don't hurt\n      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n      while (match = separatorCopy.exec(string)) {\n        // `separatorCopy.lastIndex` is not reliable cross-browser\n        lastIndex = match.index + match[0][LENGTH];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n          // eslint-disable-next-line no-loop-func\n          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {\n            for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;\n          });\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    $split = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n    };\n  }\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return [function split(separator, limit) {\n    var O = defined(this);\n    var fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n  }, $split];\n});\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n"],"sourceRoot":""}