{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/platform.js","webpack:///./node_modules/_node-libs-browser@2.1.0@node-libs-browser/mock/process.js","webpack:///./node_modules/_path-browserify@0.0.0@path-browserify/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/uri.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/common/core/position.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/common/core/range.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/diff/diff.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/strings.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/common/core/uint.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/errors.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/functional.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/lifecycle.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/event.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/linkedList.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/keyCodes.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/common/core/selection.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/cancellation.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/common/core/token.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/async.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/editor/editor.worker.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/base/common/winjs.base.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","process","global","__webpack_exports__","isWindows","isWeb","globals","Platform","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_locale","undefined","LANGUAGE_DEFAULT","nextTick","platform","rawNlsConfig","NODE_ENV","BASE_URL","nlsConfig","JSON","parse","resolved","availableLanguages","locale","_translationsConfigFile","e","navigator","userAgent","indexOf","language","Web","Mac","Windows","Linux","_globals","self","fn","setTimeout","arch","execPath","title","pid","browser","env","argv","binding","Error","path","cwd","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","normalizeArray","parts","allowAboveRoot","up","length","last","splice","unshift","splitPathRe","splitPath","filename","exec","slice","filter","xs","f","res","push","resolvedPath","resolvedAbsolute","arguments","TypeError","charAt","split","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","result","root","basename","ext","extname","str","len","g","this","Function","window","uri_a","__extends","extendStatics","setPrototypeOf","__proto__","b","__","constructor","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","ret","scheme","test","authority","_referenceResolution","_slash","_empty","_regexp","uri_URI","URI","schemeOrData","query","fragment","isUri","thing","_makeFsPath","configurable","with","change","_URI","match","decodeURIComponent","file","replace","idx","substring","components","toString","skipEncoding","_asFormatted","toJSON","revive","data","_fsPath","fsPath","_formatted","external","common_uri","_super","_this","apply","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","code","charCodeAt","encodeURIComponent","escaped","encodeURIComponentMinimal","uri","toLowerCase","encoder","userinfo","String","fromCharCode","Position","lineNumber","column","equals","other","a","isBefore","isBeforeOrEqual","compare","aLineNumber","bLineNumber","aColumn","bColumn","clone","lift","isIPosition","obj","range_Range","Range","startLineNumber","startColumn","endLineNumber","endColumn","isEmpty","range","containsPosition","position","containsRange","otherRange","plusRange","max","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","compareRangesUsingEnds","spansMultipleLines","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createStringSequence","getLength","getElementAtIndex","stringDiff","original","modified","pretty","diff_LcsDiff","ComputeDiff","Debug","Assert","condition","message","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","MaxDifferencesHistory","diff_DiffChangeHelper","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","reverse","LcsDiff","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_forwardHistory","m_reverseHistory","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","changes","ComputeDiffRecursive","ShiftChanges","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","diagonal","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","numDifferences","tempOriginalIndex","maxDifferences","numDiagonals","delta","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","matchLengthOfLongest","temp","mergedDiffs","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","_OriginalIsBoundary","element","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","originalScore","modifiedScore","left","right","diagonalBaseIndex","diagonalsBelow","diagonalsAbove","diffEven","lowerBoundEven","upperBoundEven","firstNonWhitespaceIndex","chCode","lastNonWhitespaceIndex","startIndex","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","modifiedSequence","diffAlgo","diffComputer_LineMarkerSequence","LineMarkerSequence","lines","startColumns","endColumns","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","_lines","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","txt","defaultValue","getCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","postProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","matchingLength","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldComputeCharChanges","shouldPostProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","Date","getTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","now","Uint8Matrix","rows","cols","Uint8Array","_data","row","set","toUint8","v","toUint32","PrefixSumIndexOfResult","remainder","prefixSumComputer_PrefixSumComputer","PrefixSumComputer","values","prefixSum","Uint32Array","prefixSumValidIndex","Int32Array","getCount","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","floor","mid","midStop","midStart","low","high","mirrorTextModel_MirrorTextModel","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_cache","_actual","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","MirrorTextModel","eol","versionId","_uri","_eol","_versionId","dispose","getText","onEvents","_lineStarts","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","newValue","insertText","insertLines","newLengths","characterClassifier_CharacterClassifier","CharacterClassifier","_defaultValue","_asciiMap","_createAsciiMap","_map","Map","asciiMap","charCode","_value","linkComputer_StateMachine","CharacterSet","add","has","StateMachine","edges","maxCharCode","maxState","_a","states","_b","_states","_maxCharCode","nextState","currentState","_stateMachine","getStateMachine","_classifier","getClassifier","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","LinkComputer","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","chClass","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","lineCount","getLineCount","getLineContent","j","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","lastIndexOf","n1","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","USUAL_WORD_SEPARATORS","createWordRegExp","allowInWords","source","RegExp","DEFAULT_WORD_REGEXP","ensureValidWordDefinition","wordDefinition","flags","ignoreCase","multiline","lastIndex","getWordAtPosFast","textOffset","word","getWordAtPosSlow","getWordAtText","outstandingPromiseErrors","promiseErrorHandler","details","detail","id","parent","handler","keys","errors","forEach","errorId","error","exception","onUnexpectedError","console","log","stack","winjs_base","addEventListener","ErrorHandler","listeners","unexpectedErrorHandler","emit","listener","onUnexpectedExternalError","errorHandler","isPromiseCanceledError","transformErrorForSerialization","name_1","stacktrace","$isError","canceledName","canceled","once","didCall","lifecycle_dispose","first","rest","_i","isArray","toDisposable","Event","Disposable","_toDispose","_register","None","freeze","Node","ImmortalReference","LinkedList","_first","insert","atTheEnd","newNode","oldLast","_last","prev","next","oldFirst","candidate","anchor","iterator","done","node","_disposable","event_Emitter","Emitter","_options","_event","thisArgs","disposables","_listeners","firstListener","onFirstListenerAdd","remove","onFirstListenerDidAdd","onListenerDidAdd","_noop","_disposed","onLastListenerRemove","fire","event","_deliveryQueue","iter","shift","event_1","EventMultiplexer","hasListeners","events","emitter","hook","unhook","EventBufferer","buffers","wrapEvent","buffer","bufferEvents","pop","flush","mapEvent","map","filterEvent","ChainableEvent","on","Relay","disposable","KeyCodeUtils","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","KeyChord","firstPart","secondPart","chordPart","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","SimpleKeybinding","ctrlKey","shiftKey","altKey","metaKey","type","isModifierKey","isDuplicateModifierCase","ChordKeybinding","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding","SelectionDirection","selection_extends","cancellation_CancellationToken","selection_Selection","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","LTR","RTL","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","shortcutEvent","callback","context","handle","clearTimeout","CancellationToken","isCancellationRequested","onCancellationRequested","Cancelled","MarkerTag","MarkerSeverity","cancellation_MutableToken","MutableToken","_isCancelled","cancel","_emitter","CancellationTokenSource","_token","Token","offset","TokenizationResult","tokens","endState","TokenizationResult2","KeyCode","standaloneBase_KeyMod","KeyMod","chord","CtrlCmd","Shift","Alt","WinCtrl","createMonacoBaseAPI","editor","languages","Promise","Uri","editorSimpleWorker_extends","editorSimpleWorker_MirrorModel","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","content","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","editorSimpleWorker_BaseEditorSimpleWorker","BaseEditorSimpleWorker","foreignModuleFactory","_foreignModuleFactory","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","_getModel","diffComputer","as","computeMoreMinimalEdits","modelUrl","edits","lastEol","edits_1","_diffLimit","editOffset","changes_1","newEdit","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","currentWord","seen","_suggestionsLimit","label","noAutoAccept","overwriteBefore","selectionText","wordRange","loadForeignModule","createData","ctx","getMirrorModels","_getModels","methods","prop","wrapError","fmr","method","args","editorSimpleWorker_EditorSimpleWorkerImpl","EditorSimpleWorkerImpl","_models","all","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","importScripts","monaco","async_extends","Throttler","activePromise","queuedPromise","queuedPromiseFactory","queue","promiseFactory","onComplete_1","then","err","Delayer","defaultDelay","timeout","completionPromise","onSuccess","task","trigger","delay","cancelTimeout","async_ShallowCancelThenPromise","ShallowCancelThenPromise","outer","completeCallback","errorCallback","progressCallback","TimeoutTimer","cancelAndSet","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","isScheduled","schedule","doRun","simpleWorker_extends","INITIALIZE","simpleWorker_SimpleWorkerProtocol","SimpleWorkerProtocol","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","req","reply","_send","vsWorker","handleMessage","serializedMessage","_handleMessage","msg","seq","replyMessage","warn","requestMessage","strMsg","stringify","simpleWorker_SimpleWorkerServer","SimpleWorkerClient","workerFactory","lazyProxyFulfill","lazyProxyReject","_worker","_protocol","postMessage","getId","loaderConfiguration","require","getConfig","requirejs","contexts","_","config","_lazyProxy","_onModuleLoaded","availableMethods","proxy","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","SimpleWorkerServer","postSerializedMessage","requestHandler","_requestHandler","onmessage","initialize","loaderConfig","cc","ee","baseUrl","vs","catchError","handlerModule","initialized","foreignModule","editorWorker","simpleWorker","__winjs_exports","TPromise","_modules","_winjs","deps","factory","exportsPassedIn","depsValues","dep","globalObject","_Global","hasWinRT","markSupportedForProcessing","func","supportedForProcessing","actualSetImmediate","_setImmediate","setImmediate","msWriteProfilerMark","_WinJS","_BaseCoreUtils","_WriteProfilerMark","initializeProperties","target","members","prefix","properties","member","writable","setName","defineProperties","_rootNamespace","createNamespace","parentNamespace","currentNamespace","namespaceFragments","namespaceName","defineWithParent","Namespace","LazyStates","uninitialized","working","lazy","moduleDefine","publicNS","_lazy","_moduleDefine","instanceMembers","staticMembers","derive","baseClass","basePrototype","mix","Class","_Base","ErrorFromName","createEventProperty","eventPropStateName","userHandler","wrapper","evt","removeEventListener","createEventProperties","props","EventMixinEvent","timeStamp","bubbles","cancelable","currentTarget","defaultPrevented","_preventDefaultCalled","trusted","eventPhase","preventDefault","stopImmediatePropagation","_stopImmediatePropagationCalled","stopPropagation","eventMixin","useCapture","eventListeners","dispatchEvent","eventValue","_createEventProperty","nop","_traceAsyncOperationStarting","msTraceAsyncOperationStarting","_traceAsyncOperationCompleted","msTraceAsyncOperationCompleted","_traceAsyncCallbackStarting","msTraceAsyncCallbackStarting","_traceAsyncCallbackCompleted","msTraceAsyncCallbackCompleted","_ErrorFromName","_Events","_Trace","setNonUserCodeExceptions","ListenerType","promiseEventListeners","errorET","tagWithStack","tag","promise","thenPromise","errorPromise","exceptionPromise","completePromise","state_created","state_working","state_waiting","state_waiting_canceled","state_canceled","state_canceling","state_success_notify","state_success","state_error_notify","state_error","error_number","enter","_setState","_completed","_error","_notify","_progress","_setCompleteValue","_setErrorValue","completed","progress","setCompleteValue","setErrorValue","waitedUpon","ThenPromise","_state","pushListener","_errorId","_chainedError","callonerror","detailsForHandledError","handlesOnError","_cancelAction","CompletePromise","notifySuccess","_cleanupAction","ErrorPromise","notifyError","PromiseStateMachine","_nextState","_run","onComplete","onError","onProgress","Promise_then","detailsForChainedError","detailsForError","_setChainedErrorValue","_setExceptionValue","detailsForException","targetState","createErrorDetails","errorValue","_isException","setErrorInfo","exceptionValue","asyncOpID","onerrorDetails","MS_ASYNC_OP_STATUS_SUCCESS","ex","errorID","MS_ASYNC_OP_STATUS_CANCELED","MS_ASYNC_OP_STATUS_ERROR","asyncCallbackStarted","onerrorDetailsGenerator","isException","staticCanceledPromise","creator","_stack","_getStack","_creator","unused","_doneHandler","ExceptionPromise","timeoutMS","timeoutWithPromise","cancelPromise","init","oncancel","_oncancel","complete","eventType","capture","any","is","results","undefineds","pending","argDone","errorCount","canceledCount","Key","Done","thenEach","time","wrap","_veryExpensiveTagWithStack","_veryExpensiveTagWithStack_tag","debuggerEnabled","_cancelBlocker","input","output","_StateMachine","PPromise"],"mappings":"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","file":"editor.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"f49a\");\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _locale = undefined;\nvar _language = undefined;\nvar _translationsConfigFile = undefined;\nexport var LANGUAGE_DEFAULT = 'en';\n// OS detection\nif (typeof process === 'object' && typeof process.nextTick === 'function' && typeof process.platform === 'string') {\n    _isWindows = (process.platform === 'win32');\n    _isMacintosh = (process.platform === 'darwin');\n    _isLinux = (process.platform === 'linux');\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            var nlsConfig = JSON.parse(rawNlsConfig);\n            var resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nelse if (typeof navigator === 'object') {\n    var userAgent = navigator.userAgent;\n    _isWindows = userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n    _isLinux = userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\nexport var Platform;\n(function (Platform) {\n    Platform[Platform[\"Web\"] = 0] = \"Web\";\n    Platform[Platform[\"Mac\"] = 1] = \"Mac\";\n    Platform[Platform[\"Linux\"] = 2] = \"Linux\";\n    Platform[Platform[\"Windows\"] = 3] = \"Windows\";\n})(Platform || (Platform = {}));\nvar _platform = Platform.Web;\nif (_isNative) {\n    if (_isMacintosh) {\n        _platform = Platform.Mac;\n    }\n    else if (_isWindows) {\n        _platform = Platform.Windows;\n    }\n    else if (_isLinux) {\n        _platform = Platform.Linux;\n    }\n}\nexport var isWindows = _isWindows;\nexport var isMacintosh = _isMacintosh;\nexport var isLinux = _isLinux;\nexport var isNative = _isNative;\nexport var isWeb = _isWeb;\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nexport var globals = _globals;\nvar _setImmediate = null;\nexport function setImmediate(callback) {\n    if (_setImmediate === null) {\n        if (globals.setImmediate) {\n            _setImmediate = globals.setImmediate.bind(globals);\n        }\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            _setImmediate = process.nextTick.bind(process);\n        }\n        else {\n            _setImmediate = globals.setTimeout.bind(globals);\n        }\n    }\n    return _setImmediate(callback);\n}\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\n","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nimport { isWindows } from './platform.js';\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret) {\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component paths\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n *\n *\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = schemeOrData || _empty;\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths and normalize windows drive letters to lower-case. Also\n         * uses the platform specific path separator. Will *not* validate the path for\n         * invalid characters and semantics. Will *not* look at the scheme of this URI.\n         */\n        get: function () {\n            return _makeFsPath(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === void 0) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === void 0) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === void 0) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === void 0) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === void 0) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    URI.parse = function (value) {\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty));\n    };\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            return result;\n        }\n    };\n    return URI;\n}());\nexport default URI;\n// tslint:disable-next-line:class-name\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = _makeFsPath(this);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n * @param uri\n */\nfunction _makeFsPath(uri) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        // windows drive letter: file:///c:/far/boo\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * A position in the editor.\n */\nvar Position = /** @class */ (function () {\n    function Position(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Test if this position equals other position\n     */\n    Position.prototype.equals = function (other) {\n        return Position.equals(this, other);\n    };\n    /**\n     * Test if position `a` equals position `b`\n     */\n    Position.equals = function (a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.prototype.isBefore = function (other) {\n        return Position.isBefore(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.isBefore = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.prototype.isBeforeOrEqual = function (other) {\n        return Position.isBeforeOrEqual(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.isBeforeOrEqual = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    };\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    Position.compare = function (a, b) {\n        var aLineNumber = a.lineNumber | 0;\n        var bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            var aColumn = a.column | 0;\n            var bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    };\n    /**\n     * Clone this position.\n     */\n    Position.prototype.clone = function () {\n        return new Position(this.lineNumber, this.column);\n    };\n    /**\n     * Convert to a human-readable representation.\n     */\n    Position.prototype.toString = function () {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    };\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    Position.lift = function (pos) {\n        return new Position(pos.lineNumber, pos.column);\n    };\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    Position.isIPosition = function (obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    };\n    return Position;\n}());\nexport { Position };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nvar Range = /** @class */ (function () {\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    Range.prototype.isEmpty = function () {\n        return Range.isEmpty(this);\n    };\n    /**\n     * Test if `range` is empty.\n     */\n    Range.isEmpty = function (range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    };\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    Range.prototype.containsPosition = function (position) {\n        return Range.containsPosition(this, position);\n    };\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    Range.containsPosition = function (range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    Range.prototype.containsRange = function (range) {\n        return Range.containsRange(this, range);\n    };\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    Range.containsRange = function (range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.prototype.plusRange = function (range) {\n        return Range.plusRange(this, range);\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.plusRange = function (a, b) {\n        var startLineNumber;\n        var startColumn;\n        var endLineNumber;\n        var endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.prototype.intersectRanges = function (range) {\n        return Range.intersectRanges(this, range);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.intersectRanges = function (a, b) {\n        var resultStartLineNumber = a.startLineNumber;\n        var resultStartColumn = a.startColumn;\n        var resultEndLineNumber = a.endLineNumber;\n        var resultEndColumn = a.endColumn;\n        var otherStartLineNumber = b.startLineNumber;\n        var otherStartColumn = b.startColumn;\n        var otherEndLineNumber = b.endLineNumber;\n        var otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    };\n    /**\n     * Test if this range equals other.\n     */\n    Range.prototype.equalsRange = function (other) {\n        return Range.equalsRange(this, other);\n    };\n    /**\n     * Test if range `a` equals `b`.\n     */\n    Range.equalsRange = function (a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    };\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    Range.prototype.getEndPosition = function () {\n        return new Position(this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    Range.prototype.getStartPosition = function () {\n        return new Position(this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Transform to a user presentable string representation.\n     */\n    Range.prototype.toString = function () {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    };\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.prototype.collapseToStart = function () {\n        return Range.collapseToStart(this);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.collapseToStart = function (range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    };\n    // ---\n    Range.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Range` from an `IRange`.\n     */\n    Range.lift = function (range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    };\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    Range.isIRange = function (obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    };\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    Range.areIntersectingOrTouching = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    Range.areIntersecting = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    Range.compareRangesUsingStarts = function (a, b) {\n        var aStartLineNumber = a.startLineNumber | 0;\n        var bStartLineNumber = b.startLineNumber | 0;\n        if (aStartLineNumber === bStartLineNumber) {\n            var aStartColumn = a.startColumn | 0;\n            var bStartColumn = b.startColumn | 0;\n            if (aStartColumn === bStartColumn) {\n                var aEndLineNumber = a.endLineNumber | 0;\n                var bEndLineNumber = b.endLineNumber | 0;\n                if (aEndLineNumber === bEndLineNumber) {\n                    var aEndColumn = a.endColumn | 0;\n                    var bEndColumn = b.endColumn | 0;\n                    return aEndColumn - bEndColumn;\n                }\n                return aEndLineNumber - bEndLineNumber;\n            }\n            return aStartColumn - bStartColumn;\n        }\n        return aStartLineNumber - bStartLineNumber;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    Range.compareRangesUsingEnds = function (a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    };\n    /**\n     * Test if the range spans multiple lines.\n     */\n    Range.spansMultipleLines = function (range) {\n        return range.endLineNumber > range.startLineNumber;\n    };\n    return Range;\n}());\nexport { Range };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Represents information about a specific difference between two sequences.\n */\nvar DiffChange = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    DiffChange.prototype.getOriginalEnd = function () {\n        return this.originalStart + this.originalLength;\n    };\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    DiffChange.prototype.getModifiedEnd = function () {\n        return this.modifiedStart + this.modifiedLength;\n    };\n    return DiffChange;\n}());\nexport { DiffChange };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { DiffChange } from './diffChange.js';\nfunction createStringSequence(a) {\n    return {\n        getLength: function () { return a.length; },\n        getElementAtIndex: function (pos) { return a.charCodeAt(pos); }\n    };\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nvar Debug = /** @class */ (function () {\n    function Debug() {\n    }\n    Debug.Assert = function (condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    };\n    return Debug;\n}());\nexport { Debug };\nvar MyArray = /** @class */ (function () {\n    function MyArray() {\n    }\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (var i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    };\n    return MyArray;\n}());\nexport { MyArray };\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nvar MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nvar DiffChangeHelper = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    function DiffChangeHelper() {\n        this.m_changes = [];\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    DiffChangeHelper.prototype.MarkNextChange = function () {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n    };\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    };\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    };\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    DiffChangeHelper.prototype.getChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    };\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    DiffChangeHelper.prototype.getReverseChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    };\n    return DiffChangeHelper;\n}());\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nvar LcsDiff = /** @class */ (function () {\n    /**\n     * Constructs the DiffFinder\n     */\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n        this.OriginalSequence = originalSequence;\n        this.ModifiedSequence = newSequence;\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n        return (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\n    };\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n        return (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n        return (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n    };\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        var quitEarlyArr = [false];\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            return this.ShiftChanges(changes);\n        }\n        return changes;\n    };\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            var changes = void 0;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        var midOriginalArr = [0], midModifiedArr = [0];\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        var midOriginal = midOriginalArr[0];\n        var midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            var rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We did't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    };\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        var forwardChanges = null, reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        var changeHelper = new DiffChangeHelper();\n        var diagonalMin = diagonalForwardStart;\n        var diagonalMax = diagonalForwardEnd;\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        var lastOriginalIndex = Number.MIN_VALUE;\n        var historyIndex = this.m_forwardHistory.length - 1;\n        var diagonal;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            var originalStartPoint = midOriginalArr[0] + 1;\n            var modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Number.MAX_VALUE;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    };\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        var originalIndex, modifiedIndex;\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        var numDifferences;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        var numDiagonals = maxDifferences + 1;\n        var forwardPoints = new Array(numDiagonals);\n        var reversePoints = new Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\n        var diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        var diagonalForwardOffset = (originalStart - modifiedStart);\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        var delta = diagonalReverseBase - diagonalForwardBase;\n        var deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        var diagonal, tempOriginalIndex;\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            var furthestOriginalIndex = 0;\n            var furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= MaxDifferencesHistory) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    };\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    LcsDiff.prototype.ShiftChanges = function (changes) {\n        var mergedDiffs;\n        do {\n            mergedDiffs = false;\n            // Shift all the changes down first\n            for (var i = 0; i < changes.length; i++) {\n                var change = changes[i];\n                var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n                var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n                var checkOriginal = change.originalLength > 0;\n                var checkModified = change.modifiedLength > 0;\n                while (change.originalStart + change.originalLength < originalStop &&\n                    change.modifiedStart + change.modifiedLength < modifiedStop &&\n                    (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                    (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                    change.originalStart++;\n                    change.modifiedStart++;\n                }\n            }\n            // Build up the new list (we have to build a new list because we\n            // might have changes we can merge together now)\n            var result = new Array();\n            var mergedChangeArr = [null];\n            for (var i = 0; i < changes.length; i++) {\n                if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                    mergedDiffs = true;\n                    result.push(mergedChangeArr[0]);\n                    i++;\n                }\n                else {\n                    result.push(changes[i]);\n                }\n            }\n            changes = result;\n        } while (mergedDiffs);\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (var i = changes.length - 1; i >= 0; i--) {\n            var change = changes[i];\n            var originalStop = 0;\n            var modifiedStop = 0;\n            if (i > 0) {\n                var prevChange = changes[i - 1];\n                if (prevChange.originalLength > 0) {\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\n                }\n                if (prevChange.modifiedLength > 0) {\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n                }\n            }\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            var bestDelta = 0;\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (var delta = 1;; delta++) {\n                var originalStart = change.originalStart - delta;\n                var modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n        }\n        return changes;\n    };\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.OriginalSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            var originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.ModifiedSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            var modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    };\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n        var mergedChangeArr = [];\n        var result = null;\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    };\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            var originalStart = left.originalStart;\n            var originalLength = left.originalLength;\n            var modifiedStart = left.modifiedStart;\n            var modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    };\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        var diagonalsBelow = diagonalBaseIndex;\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        var diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    };\n    return LcsDiff;\n}());\nexport { LcsDiff };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * The empty string.\n */\nexport var empty = '';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n, l, char) {\n    if (char === void 0) { char = '0'; }\n    var str = '' + n;\n    var r = [str];\n    for (var i = str.length; i < l; i++) {\n        r.push(char);\n    }\n    return r.reverse().join('');\n}\nvar _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        var idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<|>|&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle) {\n    if (needle === void 0) { needle = ' '; }\n    var trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    var offset = 0, idx = -1;\n    while ((idx = haystack.indexOf(needle, offset)) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    var offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    if (haystack === needle) {\n        return true;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function createRegExp(searchString, isRegex, options) {\n    if (options === void 0) { options = {}; }\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    var modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    var match = regexp.exec('');\n    return (match && regexp.lastIndex === 0);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start, end) {\n    if (start === void 0) { start = 0; }\n    if (end === void 0) { end = str.length; }\n    for (var i = start; i < end; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex) {\n    if (startIndex === void 0) { startIndex = str.length - 1; }\n    for (var i = startIndex; i >= 0; i--) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareIgnoreCase(a, b) {\n    var len = Math.min(a.length, b.length);\n    for (var i = 0; i < len; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (isUpperAsciiLetter(codeA)) {\n            codeA += 32;\n        }\n        if (isUpperAsciiLetter(codeB)) {\n            codeB += 32;\n        }\n        var diff = codeA - codeB;\n        if (diff === 0) {\n            // equal -> ignoreCase\n            continue;\n        }\n        else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n            //\n            return diff;\n        }\n        else {\n            return compare(a.toLowerCase(), b.toLowerCase());\n        }\n    }\n    if (a.length < b.length) {\n        return -1;\n    }\n    else if (a.length > b.length) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nexport function equalsIgnoreCase(a, b) {\n    var len1 = a ? a.length : 0;\n    var len2 = b ? b.length : 0;\n    if (len1 !== len2) {\n        return false;\n    }\n    return doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt) {\n    if (stopAt === void 0) { stopAt = a.length; }\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n    for (var i = 0; i < stopAt; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            var diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    var candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    var aLastIndex = a.length - 1;\n    var bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tlet chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\nexport function containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n// -- UTF-8 BOM\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return (str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function safeBtoa(str) {\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\nexport function repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    var diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nvar LineMarkerSequence = /** @class */ (function () {\n    function LineMarkerSequence(lines) {\n        var startColumns = [];\n        var endColumns = [];\n        for (var i = 0, length_1 = lines.length; i < length_1; i++) {\n            startColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n        }\n        this._lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    LineMarkerSequence.prototype.getLength = function () {\n        return this._lines.length;\n    };\n    LineMarkerSequence.prototype.getElementAtIndex = function (i) {\n        return this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n    };\n    LineMarkerSequence.prototype.getStartLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence.prototype.getEndLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.firstNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 1;\n    };\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.lastNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 2;\n    };\n    LineMarkerSequence.prototype.getCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        var charCodes = [];\n        var lineNumbers = [];\n        var columns = [];\n        var len = 0;\n        for (var index = startIndex; index <= endIndex; index++) {\n            var lineContent = this._lines[index];\n            var startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            var endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (var col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    };\n    return LineMarkerSequence;\n}());\nvar CharSequence = /** @class */ (function () {\n    function CharSequence(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    CharSequence.prototype.getLength = function () {\n        return this._charCodes.length;\n    };\n    CharSequence.prototype.getElementAtIndex = function (i) {\n        return this._charCodes[i];\n    };\n    CharSequence.prototype.getStartLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getStartColumn = function (i) {\n        return this._columns[i];\n    };\n    CharSequence.prototype.getEndLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getEndColumn = function (i) {\n        return this._columns[i] + 1;\n    };\n    return CharSequence;\n}());\nvar CharChange = /** @class */ (function () {\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n        var originalStartLineNumber;\n        var originalStartColumn;\n        var originalEndLineNumber;\n        var originalEndColumn;\n        var modifiedStartLineNumber;\n        var modifiedStartColumn;\n        var modifiedEndLineNumber;\n        var modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    };\n    return CharChange;\n}());\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    var result = [rawChanges[0]];\n    var prevChange = result[0];\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\n        var currChange = rawChanges[i];\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nvar LineChange = /** @class */ (function () {\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        var originalStartLineNumber;\n        var originalEndLineNumber;\n        var modifiedStartLineNumber;\n        var modifiedEndLineNumber;\n        var charChanges;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n            var originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    };\n    return LineChange;\n}());\nvar DiffComputer = /** @class */ (function () {\n    function DiffComputer(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineMarkerSequence(originalLines);\n        this.modified = new LineMarkerSequence(modifiedLines);\n    }\n    DiffComputer.prototype.computeDiff = function () {\n        if (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n            // empty original => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: 1,\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: this.modified.getLength(),\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        if (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n            // empty modified => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: this.original.getLength(),\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: 1,\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        this.computationStartTime = (new Date()).getTime();\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            var lineChanges = [];\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return lineChanges;\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        var result = [];\n        var originalLineIndex = 0;\n        var modifiedLineIndex = 0;\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                var originalLine = this.originalLines[originalLineIndex];\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n                        var originalMaxColumn = originalLine.length + 1;\n                        var modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return result;\n    };\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        var charChanges;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    };\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        var len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        var prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    };\n    DiffComputer.prototype._continueProcessingPredicate = function () {\n        if (this.maximumRunTimeMs === 0) {\n            return true;\n        }\n        var now = (new Date()).getTime();\n        return now - this.computationStartTime < this.maximumRunTimeMs;\n    };\n    return DiffComputer;\n}());\nexport { DiffComputer };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Uint8Matrix = /** @class */ (function () {\n    function Uint8Matrix(rows, cols, defaultValue) {\n        var data = new Uint8Array(rows * cols);\n        for (var i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    Uint8Matrix.prototype.get = function (row, col) {\n        return this._data[row * this.cols + col];\n    };\n    Uint8Matrix.prototype.set = function (row, col, value) {\n        this._data[row * this.cols + col] = value;\n    };\n    return Uint8Matrix;\n}());\nexport { Uint8Matrix };\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\nexport function toUint32Array(arr) {\n    var len = arr.length;\n    var r = new Uint32Array(len);\n    for (var i = 0; i < len; i++) {\n        r[i] = toUint32(arr[i]);\n    }\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { toUint32 } from '../core/uint.js';\nvar PrefixSumIndexOfResult = /** @class */ (function () {\n    function PrefixSumIndexOfResult(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n    return PrefixSumIndexOfResult;\n}());\nexport { PrefixSumIndexOfResult };\nvar PrefixSumComputer = /** @class */ (function () {\n    function PrefixSumComputer(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    PrefixSumComputer.prototype.getCount = function () {\n        return this.values.length;\n    };\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        var insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n        startIndex = toUint32(startIndex);\n        cnt = toUint32(cnt);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        var maxCnt = oldValues.length - startIndex;\n        if (cnt >= maxCnt) {\n            cnt = maxCnt;\n        }\n        if (cnt === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - cnt);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.getTotalValue = function () {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    };\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getAccumulatedValue(index);\n    };\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        var startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (var i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    };\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n        var low = 0;\n        var high = this.values.length - 1;\n        var mid;\n        var midStop;\n        var midStart;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            }\n            else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n    };\n    return PrefixSumComputer;\n}());\nexport { PrefixSumComputer };\nvar PrefixSumComputerWithCache = /** @class */ (function () {\n    function PrefixSumComputerWithCache(values) {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n        this._actual = new PrefixSumComputer(values);\n        this._bustCache();\n    }\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n    };\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n        if (this._actual.insertValues(insertIndex, insertValues)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n        if (this._actual.changeValue(index, value)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n        if (this._actual.removeValues(startIndex, cnt)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n        return this._actual.getTotalValue();\n    };\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n        return this._actual.getAccumulatedValue(index);\n    };\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        if (this._cache !== null) {\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n                // Cache hit!\n                return this._cache[cacheIndex];\n            }\n        }\n        // Cache miss!\n        return this._actual.getIndexOf(accumulatedValue);\n    };\n    /**\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\n     */\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n        var newCache = [];\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n        }\n        this._cache = newCache;\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\n    };\n    return PrefixSumComputerWithCache;\n}());\nexport { PrefixSumComputerWithCache };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nimport { Position } from '../core/position.js';\nvar MirrorTextModel = /** @class */ (function () {\n    function MirrorTextModel(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n    }\n    MirrorTextModel.prototype.dispose = function () {\n        this._lines.length = 0;\n    };\n    MirrorTextModel.prototype.getText = function () {\n        return this._lines.join(this._eol);\n    };\n    MirrorTextModel.prototype.onEvents = function (e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        var changes = e.changes;\n        for (var i = 0, len = changes.length; i < len; i++) {\n            var change = changes[i];\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n    };\n    MirrorTextModel.prototype._ensureLineStarts = function () {\n        if (!this._lineStarts) {\n            var eolLength = this._eol.length;\n            var linesLength = this._lines.length;\n            var lineStartValues = new Uint32Array(linesLength);\n            for (var i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    };\n    /**\n     * All changes to a line's text go through this method\n     */\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    };\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    };\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        var newLengths = new Uint32Array(insertLines.length - 1);\n        for (var i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    };\n    return MirrorTextModel;\n}());\nexport { MirrorTextModel };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { toUint8 } from './uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nvar CharacterClassifier = /** @class */ (function () {\n    function CharacterClassifier(_defaultValue) {\n        var defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\n        var asciiMap = new Uint8Array(256);\n        for (var i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    };\n    CharacterClassifier.prototype.set = function (charCode, _value) {\n        var value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    };\n    CharacterClassifier.prototype.get = function (charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    };\n    return CharacterClassifier;\n}());\nexport { CharacterClassifier };\nvar CharacterSet = /** @class */ (function () {\n    function CharacterSet() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    CharacterSet.prototype.add = function (charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    };\n    CharacterSet.prototype.has = function (charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    };\n    return CharacterSet;\n}());\nexport { CharacterSet };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nimport { Uint8Matrix } from '../core/uint.js';\nvar StateMachine = /** @class */ (function () {\n    function StateMachine(edges) {\n        var maxCharCode = 0;\n        var maxState = 0 /* Invalid */;\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        var states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    StateMachine.prototype.nextState = function (currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    };\n    return StateMachine;\n}());\n// State machine for http:// or https:// or file://\nvar _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nvar _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nvar LinkComputer = /** @class */ (function () {\n    function LinkComputer() {\n    }\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        var lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\n            var chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    };\n    LinkComputer.computeLinks = function (model) {\n        var stateMachine = getStateMachine();\n        var classifier = getClassifier();\n        var result = [];\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            var line = model.getLineContent(i);\n            var len = line.length;\n            var j = 0;\n            var linkBeginIndex = 0;\n            var linkBeginChCode = 0;\n            var state = 1 /* Start */;\n            var hasOpenParens = false;\n            var hasOpenSquareBracket = false;\n            var hasOpenCurlyBracket = false;\n            while (j < len) {\n                var resetStateMachine = false;\n                var chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    var chClass = void 0;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    var chClass = classifier.get(chCode);\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    };\n    return LinkComputer;\n}());\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar BasicInplaceReplace = /** @class */ (function () {\n    function BasicInplaceReplace() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            var result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            var result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n        var numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    };\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        var n1 = Number(value);\n        var n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    };\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n        var result = null;\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    };\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n        var idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    };\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n    return BasicInplaceReplace;\n}());\nexport { BasicInplaceReplace };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords) {\n    if (allowInWords === void 0) { allowInWords = ''; }\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (var i = 0; i < USUAL_WORD_SEPARATORS.length; i++) {\n        if (allowInWords.indexOf(USUAL_WORD_SEPARATORS[i]) >= 0) {\n            continue;\n        }\n        source += '\\\\' + USUAL_WORD_SEPARATORS[i];\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport var DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    var result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            var flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\n    // find whitespace enclosed text around column and match from there\n    var pos = column - 1 - textOffset;\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\n    var end = text.indexOf(' ', pos);\n    if (end === -1) {\n        end = text.length;\n    }\n    wordDefinition.lastIndex = start;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        if (match.index <= pos && wordDefinition.lastIndex >= pos) {\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + match.index,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n    // matches all words starting at the beginning\n    // of the input until it finds a match that encloses\n    // the desired column. slow but correct\n    var pos = column - 1 - textOffset;\n    wordDefinition.lastIndex = 0;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        if (match.index > pos) {\n            // |nW -> matched only after the pos\n            return null;\n        }\n        else if (wordDefinition.lastIndex >= pos) {\n            // W|W -> match encloses pos\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + match.index,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\n    // if `words` can contain whitespace character we have to use the slow variant\n    // otherwise we use the fast variant of finding a word\n    wordDefinition.lastIndex = 0;\n    var match = wordDefinition.exec(text);\n    if (!match) {\n        return null;\n    }\n    // todo@joh the `match` could already be the (first) word\n    var ret = match[0].indexOf(' ') >= 0\n        // did match a word which contains a space character -> use slow word find\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n        // sane word definition -> use fast word find\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n    // in an undefined state and to not confuse other users of the wordDefinition\n    // we reset the lastIndex\n    wordDefinition.lastIndex = 0;\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { TPromise } from './winjs.base.js';\n// ------ BEGIN Hook up error listeners to winjs promises\nvar outstandingPromiseErrors = {};\nfunction promiseErrorHandler(e) {\n    //\n    // e.detail looks like: { exception, error, promise, handler, id, parent }\n    //\n    var details = e.detail;\n    var id = details.id;\n    // If the error has a parent promise then this is not the origination of the\n    //  error so we check if it has a handler, and if so we mark that the error\n    //  was handled by removing it from outstandingPromiseErrors\n    //\n    if (details.parent) {\n        if (details.handler && outstandingPromiseErrors) {\n            delete outstandingPromiseErrors[id];\n        }\n        return;\n    }\n    // Indicate that this error was originated and needs to be handled\n    outstandingPromiseErrors[id] = details;\n    // The first time the queue fills up this iteration, schedule a timeout to\n    // check if any errors are still unhandled.\n    if (Object.keys(outstandingPromiseErrors).length === 1) {\n        setTimeout(function () {\n            var errors = outstandingPromiseErrors;\n            outstandingPromiseErrors = {};\n            Object.keys(errors).forEach(function (errorId) {\n                var error = errors[errorId];\n                if (error.exception) {\n                    onUnexpectedError(error.exception);\n                }\n                else if (error.error) {\n                    onUnexpectedError(error.error);\n                }\n                console.log('WARNING: Promise with no error callback:' + error.id);\n                console.log(error);\n                if (error.exception) {\n                    console.log(error.exception.stack);\n                }\n            });\n        }, 0);\n    }\n}\nTPromise.addEventListener('error', promiseErrorHandler);\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(function () {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    ErrorHandler.prototype.emit = function (e) {\n        this.listeners.forEach(function (listener) {\n            listener(e);\n        });\n    };\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    };\n    // For external errors, we don't want the listeners to be called\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n        this.unexpectedErrorHandler(e);\n    };\n    return ErrorHandler;\n}());\nexport { ErrorHandler };\nexport var errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        var name_1 = error.name, message = error.message;\n        var stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name: name_1,\n            message: message,\n            stack: stack\n        };\n    }\n    // return as is\n    return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n    var error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(\"Illegal argument: \" + name);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(\"Illegal state: \" + name);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport function once(fn) {\n    var _this = this;\n    var didCall = false;\n    var result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function'\n        && thing.dispose.length === 0;\n}\nexport function dispose(first) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (Array.isArray(first)) {\n        first.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    else if (rest.length === 0) {\n        if (first) {\n            first.dispose();\n            return first;\n        }\n        return undefined;\n    }\n    else {\n        dispose(first);\n        dispose(rest);\n        return [];\n    }\n}\nexport function combinedDisposable(disposables) {\n    return { dispose: function () { return dispose(disposables); } };\n}\nexport function toDisposable(fn) {\n    return { dispose: function () { fn(); } };\n}\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        this._toDispose = [];\n    }\n    Object.defineProperty(Disposable.prototype, \"toDispose\", {\n        get: function () { return this._toDispose; },\n        enumerable: true,\n        configurable: true\n    });\n    Disposable.prototype.dispose = function () {\n        this._toDispose = dispose(this._toDispose);\n    };\n    Disposable.prototype._register = function (t) {\n        this._toDispose.push(t);\n        return t;\n    };\n    Disposable.None = Object.freeze({ dispose: function () { } });\n    return Disposable;\n}());\nexport { Disposable };\nvar ImmortalReference = /** @class */ (function () {\n    function ImmortalReference(object) {\n        this.object = object;\n    }\n    ImmortalReference.prototype.dispose = function () { };\n    return ImmortalReference;\n}());\nexport { ImmortalReference };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { onUnexpectedError } from './errors.js';\nimport { once as onceFn } from './functional.js';\nimport { combinedDisposable, Disposable, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nexport var Event;\n(function (Event) {\n    var _disposable = { dispose: function () { } };\n    Event.None = function () { return _disposable; };\n})(Event || (Event = {}));\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nvar Emitter = /** @class */ (function () {\n    function Emitter(_options) {\n        this._options = _options;\n    }\n    Object.defineProperty(Emitter.prototype, \"event\", {\n        /**\n         * For the public to allow to subscribe\n         * to events from this Emitter\n         */\n        get: function () {\n            var _this = this;\n            if (!this._event) {\n                this._event = function (listener, thisArgs, disposables) {\n                    if (!_this._listeners) {\n                        _this._listeners = new LinkedList();\n                    }\n                    var firstListener = _this._listeners.isEmpty();\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n                        _this._options.onFirstListenerAdd(_this);\n                    }\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n                        _this._options.onFirstListenerDidAdd(_this);\n                    }\n                    if (_this._options && _this._options.onListenerDidAdd) {\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\n                    }\n                    var result;\n                    result = {\n                        dispose: function () {\n                            result.dispose = Emitter._noop;\n                            if (!_this._disposed) {\n                                remove();\n                                if (_this._options && _this._options.onLastListenerRemove && _this._listeners.isEmpty()) {\n                                    _this._options.onLastListenerRemove(_this);\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(disposables)) {\n                        disposables.push(result);\n                    }\n                    return result;\n                };\n            }\n            return this._event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    Emitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = [];\n            }\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n                this._deliveryQueue.push([e.value, event]);\n            }\n            while (this._deliveryQueue.length > 0) {\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event_1);\n                    }\n                    else {\n                        listener[0].call(listener[1], event_1);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n        }\n    };\n    Emitter.prototype.dispose = function () {\n        if (this._listeners) {\n            this._listeners = undefined;\n        }\n        if (this._deliveryQueue) {\n            this._deliveryQueue.length = 0;\n        }\n        this._disposed = true;\n    };\n    Emitter._noop = function () { };\n    return Emitter;\n}());\nexport { Emitter };\nvar EventMultiplexer = /** @class */ (function () {\n    function EventMultiplexer() {\n        var _this = this;\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\n        });\n    }\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n        get: function () {\n            return this.emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventMultiplexer.prototype.add = function (event) {\n        var _this = this;\n        var e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        var dispose = function () {\n            if (_this.hasListeners) {\n                _this.unhook(e);\n            }\n            var idx = _this.events.indexOf(e);\n            _this.events.splice(idx, 1);\n        };\n        return toDisposable(onceFn(dispose));\n    };\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\n        var _this = this;\n        this.hasListeners = true;\n        this.events.forEach(function (e) { return _this.hook(e); });\n    };\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\n        var _this = this;\n        this.hasListeners = false;\n        this.events.forEach(function (e) { return _this.unhook(e); });\n    };\n    EventMultiplexer.prototype.hook = function (e) {\n        var _this = this;\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\n    };\n    EventMultiplexer.prototype.unhook = function (e) {\n        e.listener.dispose();\n        e.listener = null;\n    };\n    EventMultiplexer.prototype.dispose = function () {\n        this.emitter.dispose();\n    };\n    return EventMultiplexer;\n}());\nexport { EventMultiplexer };\nexport function once(event) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        var result = event(function (e) {\n            result.dispose();\n            return listener.call(thisArgs, e);\n        }, null, disposables);\n        return result;\n    };\n}\nexport function anyEvent() {\n    var events = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        events[_i] = arguments[_i];\n    }\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return combinedDisposable(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\n    };\n}\nexport function debounceEvent(event, merger, delay, leading) {\n    if (delay === void 0) { delay = 100; }\n    if (leading === void 0) { leading = false; }\n    var subscription;\n    var output = undefined;\n    var handle = undefined;\n    var numDebouncedCalls = 0;\n    var emitter = new Emitter({\n        onFirstListenerAdd: function () {\n            subscription = event(function (cur) {\n                numDebouncedCalls++;\n                output = merger(output, cur);\n                if (leading && !handle) {\n                    emitter.fire(output);\n                }\n                clearTimeout(handle);\n                handle = setTimeout(function () {\n                    var _output = output;\n                    output = undefined;\n                    handle = undefined;\n                    if (!leading || numDebouncedCalls > 1) {\n                        emitter.fire(_output);\n                    }\n                    numDebouncedCalls = 0;\n                }, delay);\n            });\n        },\n        onLastListenerRemove: function () {\n            subscription.dispose();\n        }\n    });\n    return emitter.event;\n}\n/**\n * The EventDelayer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nvar EventBufferer = /** @class */ (function () {\n    function EventBufferer() {\n        this.buffers = [];\n    }\n    EventBufferer.prototype.wrapEvent = function (event) {\n        var _this = this;\n        return function (listener, thisArgs, disposables) {\n            return event(function (i) {\n                var buffer = _this.buffers[_this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(function () { return listener.call(thisArgs, i); });\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, void 0, disposables);\n        };\n    };\n    EventBufferer.prototype.bufferEvents = function (fn) {\n        var buffer = [];\n        this.buffers.push(buffer);\n        fn();\n        this.buffers.pop();\n        buffer.forEach(function (flush) { return flush(); });\n    };\n    return EventBufferer;\n}());\nexport { EventBufferer };\nexport function mapEvent(event, map) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n    };\n}\nexport function filterEvent(event, filter) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n    };\n}\nvar ChainableEvent = /** @class */ (function () {\n    function ChainableEvent(_event) {\n        this._event = _event;\n    }\n    Object.defineProperty(ChainableEvent.prototype, \"event\", {\n        get: function () { return this._event; },\n        enumerable: true,\n        configurable: true\n    });\n    ChainableEvent.prototype.map = function (fn) {\n        return new ChainableEvent(mapEvent(this._event, fn));\n    };\n    ChainableEvent.prototype.filter = function (fn) {\n        return new ChainableEvent(filterEvent(this._event, fn));\n    };\n    ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n        return this._event(listener, thisArgs, disposables);\n    };\n    return ChainableEvent;\n}());\nexport function chain(event) {\n    return new ChainableEvent(event);\n}\nvar Relay = /** @class */ (function () {\n    function Relay() {\n        this.emitter = new Emitter();\n        this.event = this.emitter.event;\n        this.disposable = Disposable.None;\n    }\n    Object.defineProperty(Relay.prototype, \"input\", {\n        set: function (event) {\n            this.disposable.dispose();\n            this.disposable = event(this.emitter.fire, this.emitter);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Relay.prototype.dispose = function () {\n        this.disposable.dispose();\n        this.emitter.dispose();\n    };\n    return Relay;\n}());\nexport { Relay };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Node = /** @class */ (function () {\n    function Node(element) {\n        this.element = element;\n    }\n    return Node;\n}());\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n    }\n    LinkedList.prototype.isEmpty = function () {\n        return !this._first;\n    };\n    LinkedList.prototype.unshift = function (element) {\n        return this.insert(element, false);\n    };\n    LinkedList.prototype.push = function (element) {\n        return this.insert(element, true);\n    };\n    LinkedList.prototype.insert = function (element, atTheEnd) {\n        var _this = this;\n        var newNode = new Node(element);\n        if (!this._first) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            var oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            var oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        return function () {\n            for (var candidate = _this._first; candidate instanceof Node; candidate = candidate.next) {\n                if (candidate !== newNode) {\n                    continue;\n                }\n                if (candidate.prev && candidate.next) {\n                    // middle\n                    var anchor = candidate.prev;\n                    anchor.next = candidate.next;\n                    candidate.next.prev = anchor;\n                }\n                else if (!candidate.prev && !candidate.next) {\n                    // only node\n                    _this._first = undefined;\n                    _this._last = undefined;\n                }\n                else if (!candidate.next) {\n                    // last\n                    _this._last = _this._last.prev;\n                    _this._last.next = undefined;\n                }\n                else if (!candidate.prev) {\n                    // first\n                    _this._first = _this._first.next;\n                    _this._first.prev = undefined;\n                }\n                // done\n                break;\n            }\n        };\n    };\n    LinkedList.prototype.iterator = function () {\n        var element = {\n            done: undefined,\n            value: undefined,\n        };\n        var node = this._first;\n        return {\n            next: function () {\n                if (!node) {\n                    element.done = true;\n                    element.value = undefined;\n                }\n                else {\n                    element.done = false;\n                    element.value = node.element;\n                    node = node.next;\n                }\n                return element;\n            }\n        };\n    };\n    return LinkedList;\n}());\nexport { LinkedList };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar KeyCodeStrMap = /** @class */ (function () {\n    function KeyCodeStrMap() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    };\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n        return this._keyCodeToStr[keyCode];\n    };\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    };\n    return KeyCodeStrMap;\n}());\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    var chordPart = ((secondPart & 0x0000ffff) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    var firstPart = (keybinding & 0x0000ffff) >>> 0;\n    var chordPart = (keybinding & 0xffff0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding(createSimpleKeybinding(firstPart, OS), createSimpleKeybinding(chordPart, OS));\n    }\n    return createSimpleKeybinding(firstPart, OS);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    var keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nvar SimpleKeybinding = /** @class */ (function () {\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.type = 1 /* Simple */;\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    SimpleKeybinding.prototype.equals = function (other) {\n        if (other.type !== 1 /* Simple */) {\n            return false;\n        }\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    };\n    SimpleKeybinding.prototype.isModifierKey = function () {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    };\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    };\n    return SimpleKeybinding;\n}());\nexport { SimpleKeybinding };\nvar ChordKeybinding = /** @class */ (function () {\n    function ChordKeybinding(firstPart, chordPart) {\n        this.type = 2 /* Chord */;\n        this.firstPart = firstPart;\n        this.chordPart = chordPart;\n    }\n    return ChordKeybinding;\n}());\nexport { ChordKeybinding };\nvar ResolvedKeybindingPart = /** @class */ (function () {\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n    return ResolvedKeybindingPart;\n}());\nexport { ResolvedKeybindingPart };\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nvar ResolvedKeybinding = /** @class */ (function () {\n    function ResolvedKeybinding() {\n    }\n    return ResolvedKeybinding;\n}());\nexport { ResolvedKeybinding };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Range } from './range.js';\nimport { Position } from './position.js';\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nvar Selection = /** @class */ (function (_super) {\n    __extends(Selection, _super);\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n        _this.selectionStartLineNumber = selectionStartLineNumber;\n        _this.selectionStartColumn = selectionStartColumn;\n        _this.positionLineNumber = positionLineNumber;\n        _this.positionColumn = positionColumn;\n        return _this;\n    }\n    /**\n     * Clone this selection.\n     */\n    Selection.prototype.clone = function () {\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Transform to a human-readable representation.\n     */\n    Selection.prototype.toString = function () {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    };\n    /**\n     * Test if equals other selection.\n     */\n    Selection.prototype.equalsSelection = function (other) {\n        return (Selection.selectionsEqual(this, other));\n    };\n    /**\n     * Test if the two selections are equal.\n     */\n    Selection.selectionsEqual = function (a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    };\n    /**\n     * Get directions (LTR or RTL).\n     */\n    Selection.prototype.getDirection = function () {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return SelectionDirection.LTR;\n        }\n        return SelectionDirection.RTL;\n    };\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        if (this.getDirection() === SelectionDirection.LTR) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.getPosition = function () {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        if (this.getDirection() === SelectionDirection.LTR) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    };\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    Selection.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    Selection.liftSelection = function (sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    };\n    /**\n     * `a` equals `b`.\n     */\n    Selection.selectionsArrEqual = function (a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    Selection.isISelection = function (obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    };\n    /**\n     * Create with a direction.\n     */\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === SelectionDirection.LTR) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    };\n    return Selection;\n}(Range));\nexport { Selection };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { Event, Emitter } from './event.js';\nvar shortcutEvent = Object.freeze(function (callback, context) {\n    var handle = setTimeout(callback.bind(context), 0);\n    return { dispose: function () { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nvar MutableToken = /** @class */ (function () {\n    function MutableToken() {\n        this._isCancelled = false;\n    }\n    MutableToken.prototype.cancel = function () {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    };\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n        get: function () {\n            return this._isCancelled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n        get: function () {\n            if (this._isCancelled) {\n                return shortcutEvent;\n            }\n            if (!this._emitter) {\n                this._emitter = new Emitter();\n            }\n            return this._emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MutableToken.prototype.dispose = function () {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    };\n    return MutableToken;\n}());\nvar CancellationTokenSource = /** @class */ (function () {\n    function CancellationTokenSource() {\n    }\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n        get: function () {\n            if (!this._token) {\n                // be lazy and create the token only when\n                // actually needed\n                this._token = new MutableToken();\n            }\n            return this._token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CancellationTokenSource.prototype.cancel = function () {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    };\n    CancellationTokenSource.prototype.dispose = function () {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    };\n    return CancellationTokenSource;\n}());\nexport { CancellationTokenSource };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection, SelectionDirection } from '../core/selection.js';\nimport { TPromise } from '../../../base/common/winjs.base.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Token } from '../core/token.js';\nimport URI from '../../../base/common/uri.js';\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n})(MarkerTag || (MarkerTag = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\nvar KeyMod = /** @class */ (function () {\n    function KeyMod() {\n    }\n    KeyMod.chord = function (firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    };\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n    KeyMod.Shift = 1024 /* Shift */;\n    KeyMod.Alt = 512 /* Alt */;\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\n    return KeyMod;\n}());\nexport { KeyMod };\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: SelectionDirection,\n        MarkerSeverity: MarkerSeverity,\n        MarkerTag: MarkerTag,\n        Promise: TPromise,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Token = /** @class */ (function () {\n    function Token(offset, type, language) {\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    Token.prototype.toString = function () {\n        return '(' + this.offset + ', ' + this.type + ')';\n    };\n    return Token;\n}());\nexport { Token };\nvar TokenizationResult = /** @class */ (function () {\n    function TokenizationResult(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult;\n}());\nexport { TokenizationResult };\nvar TokenizationResult2 = /** @class */ (function () {\n    function TokenizationResult2(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult2;\n}());\nexport { TokenizationResult2 };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport URI from '../../../base/common/uri.js';\nimport { TPromise } from '../../../base/common/winjs.base.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { Position } from '../core/position.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { getWordAtText, ensureValidWordDefinition } from '../model/wordHelper.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport { globals } from '../../../base/common/platform.js';\n/**\n * @internal\n */\nvar MirrorModel = /** @class */ (function (_super) {\n    __extends(MirrorModel, _super);\n    function MirrorModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\n        get: function () {\n            return this._eol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorModel.prototype.getValue = function () {\n        return this.getText();\n    };\n    MirrorModel.prototype.getLinesContent = function () {\n        return this._lines.slice(0);\n    };\n    MirrorModel.prototype.getLineCount = function () {\n        return this._lines.length;\n    };\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\n        return this._lines[lineNumber - 1];\n    };\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n        var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    };\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    };\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n        var _this = this;\n        var obj = {\n            done: false,\n            value: ''\n        };\n        var lineNumber = 0;\n        var lineText;\n        var wordRangesIdx = 0;\n        var wordRanges = [];\n        var next = function () {\n            if (wordRangesIdx < wordRanges.length) {\n                obj.done = false;\n                obj.value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                wordRangesIdx += 1;\n            }\n            else if (lineNumber >= _this._lines.length) {\n                obj.done = true;\n                obj.value = undefined;\n            }\n            else {\n                lineText = _this._lines[lineNumber];\n                wordRanges = _this._wordenize(lineText, wordDefinition);\n                wordRangesIdx = 0;\n                lineNumber += 1;\n                return next();\n            }\n            return obj;\n        };\n        return { next: next };\n    };\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n        var result = [];\n        var match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    };\n    MirrorModel.prototype.getValueInRange = function (range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        var lineEnding = this._eol;\n        var startLineIndex = range.startLineNumber - 1;\n        var endLineIndex = range.endLineNumber - 1;\n        var resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    };\n    MirrorModel.prototype.offsetAt = function (position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    };\n    MirrorModel.prototype.positionAt = function (offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        var out = this._lineStarts.getIndexOf(offset);\n        var lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    };\n    MirrorModel.prototype._validateRange = function (range) {\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    };\n    MirrorModel.prototype._validatePosition = function (position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        var lineNumber = position.lineNumber, column = position.column;\n        var hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber: lineNumber, column: column };\n        }\n    };\n    return MirrorModel;\n}(BaseMirrorModel));\n/**\n * @internal\n */\nvar BaseEditorSimpleWorker = /** @class */ (function () {\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            shouldComputeCharChanges: true,\n            shouldPostProcessCharChanges: true,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        return TPromise.as(diffComputer.computeDiff());\n    };\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return TPromise.as(edits);\n        }\n        var result = [];\n        var lastEol;\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (!range) {\n                // eol-change only\n                continue;\n            }\n            var original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n                result.push({ range: range, text: text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            var changes = stringDiff(original, text, false);\n            var editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n                var change = changes_1[_b];\n                var start = model.positionAt(editOffset + change.originalStart);\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                var newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: undefined, range: undefined });\n        }\n        return TPromise.as(result);\n    };\n    // ---- END minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return TPromise.as(computeLinks(model));\n    };\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (model) {\n            var suggestions = [];\n            var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            var currentWord = model.getWordUntilPosition(position, wordDefRegExp).word;\n            var seen = Object.create(null);\n            seen[currentWord] = true;\n            for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n                var word = e.value;\n                if (seen[word]) {\n                    continue;\n                }\n                seen[word] = true;\n                if (!isNaN(Number(word))) {\n                    continue;\n                }\n                suggestions.push({\n                    type: 'text',\n                    label: word,\n                    insertText: word,\n                    noAutoAccept: true,\n                    overwriteBefore: currentWord.length\n                });\n            }\n            return TPromise.as({ suggestions: suggestions });\n        }\n        return undefined;\n    };\n    // ---- END suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        var selectionText = model.getValueInRange(range);\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        var word = null;\n        if (wordRange !== null) {\n            word = model.getValueInRange(wordRange);\n        }\n        var result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return TPromise.as(result);\n    };\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n        var _this = this;\n        var ctx = {\n            getMirrorModels: function () {\n                return _this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            var methods = [];\n            for (var prop in this._foreignModule) {\n                if (typeof this._foreignModule[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return TPromise.as(methods);\n        }\n        // ESM-comment-begin\n        // \t\treturn new TPromise<any>((c, e) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tlet methods: string[] = [];\n        // \t\t\t\tfor (let prop in this._foreignModule) {\n        // \t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n        // \t\t\t\t\t\tmethods.push(prop);\n        // \t\t\t\t\t}\n        // \t\t\t\t}\n        // \n        // \t\t\t\tc(methods);\n        // \n        // \t\t\t}, e);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return TPromise.wrapError(new Error(\"Unexpected usage\"));\n        // ESM-uncomment-end\n    };\n    // foreign method request\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return TPromise.as(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return TPromise.wrapError(e);\n        }\n    };\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker._diffLimit = 10000;\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\n    return BaseEditorSimpleWorker;\n}());\nexport { BaseEditorSimpleWorker };\n/**\n * @internal\n */\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\n    __extends(EditorSimpleWorkerImpl, _super);\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\n        var _this = _super.call(this, foreignModuleFactory) || this;\n        _this._models = Object.create(null);\n        return _this;\n    }\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\n        this._models = Object.create(null);\n    };\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n        return this._models[uri];\n    };\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\n        var _this = this;\n        var all = [];\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n        return all;\n    };\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        var model = this._models[strURL];\n        model.onEvents(e);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    };\n    return EditorSimpleWorkerImpl;\n}(BaseEditorSimpleWorker));\nexport { EditorSimpleWorkerImpl };\n/**\n * Called on the worker side\n * @internal\n */\nexport function create() {\n    return new EditorSimpleWorkerImpl(null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as errors from './errors.js';\nimport { TPromise } from './winjs.base.js';\nimport { CancellationTokenSource } from './cancellation.js';\nimport { Disposable } from './lifecycle.js';\nexport function isThenable(obj) {\n    return obj && typeof obj.then === 'function';\n}\nexport function toThenable(arg) {\n    if (isThenable(arg)) {\n        return arg;\n    }\n    else {\n        return TPromise.as(arg);\n    }\n}\nexport function createCancelablePromise(callback) {\n    var source = new CancellationTokenSource();\n    var thenable = callback(source.token);\n    var promise = new Promise(function (resolve, reject) {\n        source.token.onCancellationRequested(function () {\n            reject(errors.canceled());\n        });\n        Promise.resolve(thenable).then(function (value) {\n            source.dispose();\n            resolve(value);\n        }, function (err) {\n            source.dispose();\n            reject(err);\n        });\n    });\n    return new /** @class */ (function () {\n        function class_1() {\n        }\n        class_1.prototype.cancel = function () {\n            source.cancel();\n        };\n        class_1.prototype.then = function (resolve, reject) {\n            return promise.then(resolve, reject);\n        };\n        class_1.prototype.catch = function (reject) {\n            return this.then(undefined, reject);\n        };\n        return class_1;\n    }());\n}\nexport function asWinJsPromise(callback) {\n    var source = new CancellationTokenSource();\n    return new TPromise(function (resolve, reject, progress) {\n        var item = callback(source.token);\n        if (item instanceof TPromise) {\n            item.then(function (result) {\n                source.dispose();\n                resolve(result);\n            }, function (err) {\n                source.dispose();\n                reject(err);\n            }, progress);\n        }\n        else if (isThenable(item)) {\n            item.then(function (result) {\n                source.dispose();\n                resolve(result);\n            }, function (err) {\n                source.dispose();\n                reject(err);\n            });\n        }\n        else {\n            source.dispose();\n            resolve(item);\n        }\n    }, function () {\n        source.cancel();\n    });\n}\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nexport function wireCancellationToken(token, promise, resolveAsUndefinedWhenCancelled) {\n    var subscription = token.onCancellationRequested(function () { return promise.cancel(); });\n    if (resolveAsUndefinedWhenCancelled) {\n        promise = promise.then(undefined, function (err) {\n            if (!errors.isPromiseCanceledError(err)) {\n                return TPromise.wrapError(err);\n            }\n            return undefined;\n        });\n    }\n    return always(promise, function () { return subscription.dispose(); });\n}\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nvar Throttler = /** @class */ (function () {\n    function Throttler() {\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n    Throttler.prototype.queue = function (promiseFactory) {\n        var _this = this;\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n            if (!this.queuedPromise) {\n                var onComplete_1 = function () {\n                    _this.queuedPromise = null;\n                    var result = _this.queue(_this.queuedPromiseFactory);\n                    _this.queuedPromiseFactory = null;\n                    return result;\n                };\n                this.queuedPromise = new TPromise(function (c, e, p) {\n                    _this.activePromise.then(onComplete_1, onComplete_1, p).done(c);\n                }, function () {\n                    _this.activePromise.cancel();\n                });\n            }\n            return new TPromise(function (c, e, p) {\n                _this.queuedPromise.then(c, e, p);\n            }, function () {\n                // no-op\n            });\n        }\n        this.activePromise = promiseFactory();\n        return new TPromise(function (c, e, p) {\n            _this.activePromise.done(function (result) {\n                _this.activePromise = null;\n                c(result);\n            }, function (err) {\n                _this.activePromise = null;\n                e(err);\n            }, p);\n        }, function () {\n            _this.activePromise.cancel();\n        });\n    };\n    return Throttler;\n}());\nexport { Throttler };\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nvar Delayer = /** @class */ (function () {\n    function Delayer(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.timeout = null;\n        this.completionPromise = null;\n        this.onSuccess = null;\n        this.task = null;\n    }\n    Delayer.prototype.trigger = function (task, delay) {\n        var _this = this;\n        if (delay === void 0) { delay = this.defaultDelay; }\n        this.task = task;\n        this.cancelTimeout();\n        if (!this.completionPromise) {\n            this.completionPromise = new TPromise(function (c) {\n                _this.onSuccess = c;\n            }, function () {\n                // no-op\n            }).then(function () {\n                _this.completionPromise = null;\n                _this.onSuccess = null;\n                var task = _this.task;\n                _this.task = null;\n                return task();\n            });\n        }\n        this.timeout = setTimeout(function () {\n            _this.timeout = null;\n            _this.onSuccess(null);\n        }, delay);\n        return this.completionPromise;\n    };\n    Delayer.prototype.cancel = function () {\n        this.cancelTimeout();\n        if (this.completionPromise) {\n            this.completionPromise.cancel();\n            this.completionPromise = null;\n        }\n    };\n    Delayer.prototype.cancelTimeout = function () {\n        if (this.timeout !== null) {\n            clearTimeout(this.timeout);\n            this.timeout = null;\n        }\n    };\n    return Delayer;\n}());\nexport { Delayer };\nvar ShallowCancelThenPromise = /** @class */ (function (_super) {\n    __extends(ShallowCancelThenPromise, _super);\n    function ShallowCancelThenPromise(outer) {\n        var _this = this;\n        var completeCallback, errorCallback, progressCallback;\n        _this = _super.call(this, function (c, e, p) {\n            completeCallback = c;\n            errorCallback = e;\n            progressCallback = p;\n        }, function () {\n            // cancel this promise but not the\n            // outer promise\n            errorCallback(errors.canceled());\n        }) || this;\n        outer.then(completeCallback, errorCallback, progressCallback);\n        return _this;\n    }\n    return ShallowCancelThenPromise;\n}(TPromise));\nexport { ShallowCancelThenPromise };\n/**\n * Replacement for `WinJS.TPromise.timeout`.\n */\nexport function timeout(n) {\n    return createCancelablePromise(function (token) {\n        return new Promise(function (resolve, reject) {\n            var handle = setTimeout(resolve, n);\n            token.onCancellationRequested(function (_) {\n                clearTimeout(handle);\n                reject(errors.canceled());\n            });\n        });\n    });\n}\nfunction isWinJSPromise(candidate) {\n    return TPromise.is(candidate) && typeof candidate.done === 'function';\n}\nexport function always(winjsPromiseOrThenable, f) {\n    if (isWinJSPromise(winjsPromiseOrThenable)) {\n        return new TPromise(function (c, e, p) {\n            winjsPromiseOrThenable.done(function (result) {\n                try {\n                    f(result);\n                }\n                catch (e1) {\n                    errors.onUnexpectedError(e1);\n                }\n                c(result);\n            }, function (err) {\n                try {\n                    f(err);\n                }\n                catch (e1) {\n                    errors.onUnexpectedError(e1);\n                }\n                e(err);\n            }, function (progress) {\n                p(progress);\n            });\n        }, function () {\n            winjsPromiseOrThenable.cancel();\n        });\n    }\n    else {\n        // simple\n        winjsPromiseOrThenable.then(function (_) { return f(); }, function (_) { return f(); });\n        return winjsPromiseOrThenable;\n    }\n}\nexport function first2(promiseFactories, shouldStop, defaultValue) {\n    if (shouldStop === void 0) { shouldStop = function (t) { return !!t; }; }\n    if (defaultValue === void 0) { defaultValue = null; }\n    var index = 0;\n    var len = promiseFactories.length;\n    var loop = function () {\n        if (index >= len) {\n            return Promise.resolve(defaultValue);\n        }\n        var factory = promiseFactories[index++];\n        var promise = factory();\n        return promise.then(function (result) {\n            if (shouldStop(result)) {\n                return Promise.resolve(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\nexport function first(promiseFactories, shouldStop, defaultValue) {\n    if (shouldStop === void 0) { shouldStop = function (t) { return !!t; }; }\n    if (defaultValue === void 0) { defaultValue = null; }\n    var index = 0;\n    var len = promiseFactories.length;\n    var loop = function () {\n        if (index >= len) {\n            return TPromise.as(defaultValue);\n        }\n        var factory = promiseFactories[index++];\n        var promise = factory();\n        return promise.then(function (result) {\n            if (shouldStop(result)) {\n                return TPromise.as(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\nexport function setDisposableTimeout(handler, timeout) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    var handle = setTimeout.apply(void 0, [handler, timeout].concat(args));\n    return { dispose: function () { clearTimeout(handle); } };\n}\nvar TimeoutTimer = /** @class */ (function (_super) {\n    __extends(TimeoutTimer, _super);\n    function TimeoutTimer() {\n        var _this = _super.call(this) || this;\n        _this._token = -1;\n        return _this;\n    }\n    TimeoutTimer.prototype.dispose = function () {\n        this.cancel();\n        _super.prototype.dispose.call(this);\n    };\n    TimeoutTimer.prototype.cancel = function () {\n        if (this._token !== -1) {\n            clearTimeout(this._token);\n            this._token = -1;\n        }\n    };\n    TimeoutTimer.prototype.cancelAndSet = function (runner, timeout) {\n        var _this = this;\n        this.cancel();\n        this._token = setTimeout(function () {\n            _this._token = -1;\n            runner();\n        }, timeout);\n    };\n    TimeoutTimer.prototype.setIfNotSet = function (runner, timeout) {\n        var _this = this;\n        if (this._token !== -1) {\n            // timer is already set\n            return;\n        }\n        this._token = setTimeout(function () {\n            _this._token = -1;\n            runner();\n        }, timeout);\n    };\n    return TimeoutTimer;\n}(Disposable));\nexport { TimeoutTimer };\nvar IntervalTimer = /** @class */ (function (_super) {\n    __extends(IntervalTimer, _super);\n    function IntervalTimer() {\n        var _this = _super.call(this) || this;\n        _this._token = -1;\n        return _this;\n    }\n    IntervalTimer.prototype.dispose = function () {\n        this.cancel();\n        _super.prototype.dispose.call(this);\n    };\n    IntervalTimer.prototype.cancel = function () {\n        if (this._token !== -1) {\n            clearInterval(this._token);\n            this._token = -1;\n        }\n    };\n    IntervalTimer.prototype.cancelAndSet = function (runner, interval) {\n        this.cancel();\n        this._token = setInterval(function () {\n            runner();\n        }, interval);\n    };\n    return IntervalTimer;\n}(Disposable));\nexport { IntervalTimer };\nvar RunOnceScheduler = /** @class */ (function () {\n    function RunOnceScheduler(runner, timeout) {\n        this.timeoutToken = -1;\n        this.runner = runner;\n        this.timeout = timeout;\n        this.timeoutHandler = this.onTimeout.bind(this);\n    }\n    /**\n     * Dispose RunOnceScheduler\n     */\n    RunOnceScheduler.prototype.dispose = function () {\n        this.cancel();\n        this.runner = null;\n    };\n    /**\n     * Cancel current scheduled runner (if any).\n     */\n    RunOnceScheduler.prototype.cancel = function () {\n        if (this.isScheduled()) {\n            clearTimeout(this.timeoutToken);\n            this.timeoutToken = -1;\n        }\n    };\n    /**\n     * Cancel previous runner (if any) & schedule a new runner.\n     */\n    RunOnceScheduler.prototype.schedule = function (delay) {\n        if (delay === void 0) { delay = this.timeout; }\n        this.cancel();\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    };\n    /**\n     * Returns true if scheduled.\n     */\n    RunOnceScheduler.prototype.isScheduled = function () {\n        return this.timeoutToken !== -1;\n    };\n    RunOnceScheduler.prototype.onTimeout = function () {\n        this.timeoutToken = -1;\n        if (this.runner) {\n            this.doRun();\n        }\n    };\n    RunOnceScheduler.prototype.doRun = function () {\n        this.runner();\n    };\n    return RunOnceScheduler;\n}());\nexport { RunOnceScheduler };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { TPromise } from '../winjs.base.js';\nimport { ShallowCancelThenPromise } from '../async.js';\nimport { isWeb } from '../platform.js';\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar SimpleWorkerProtocol = /** @class */ (function () {\n    function SimpleWorkerProtocol(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n        this._workerId = workerId;\n    };\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n        var req = String(++this._lastSentReq);\n        var reply = {\n            c: null,\n            e: null\n        };\n        var result = new TPromise(function (c, e) {\n            reply.c = c;\n            reply.e = e;\n        }, function () {\n            // Cancel not supported\n        });\n        this._pendingReplies[req] = reply;\n        this._send({\n            vsWorker: this._workerId,\n            req: req,\n            method: method,\n            args: args\n        });\n        return result;\n    };\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n        var message;\n        try {\n            message = JSON.parse(serializedMessage);\n        }\n        catch (e) {\n            // nothing\n        }\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    };\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n        var _this = this;\n        if (msg.seq) {\n            var replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            var reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                var err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.e(err);\n                return;\n            }\n            reply.c(replyMessage.res);\n            return;\n        }\n        var requestMessage = msg;\n        var req = requestMessage.req;\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then(function (r) {\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, function (e) {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: undefined,\n                err: transformErrorForSerialization(e)\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype._send = function (msg) {\n        var strMsg = JSON.stringify(msg);\n        // console.log('SENDING: ' + strMsg);\n        this._handler.sendMessage(strMsg);\n    };\n    return SimpleWorkerProtocol;\n}());\n/**\n * Main thread side\n */\nvar SimpleWorkerClient = /** @class */ (function (_super) {\n    __extends(SimpleWorkerClient, _super);\n    function SimpleWorkerClient(workerFactory, moduleId) {\n        var _this = _super.call(this) || this;\n        var lazyProxyFulfill = null;\n        var lazyProxyReject = null;\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n            _this._protocol.handleMessage(msg);\n        }, function (err) {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            lazyProxyReject(err);\n        }));\n        _this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                _this._worker.postMessage(msg);\n            },\n            handleMessage: function (method, args) {\n                // Intentionally not supporting worker -> main requests\n                return TPromise.as(null);\n            }\n        });\n        _this._protocol.setWorkerId(_this._worker.getId());\n        // Gather loader configuration\n        var loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        _this._lazyProxy = new TPromise(function (c, e) {\n            lazyProxyFulfill = c;\n            lazyProxyReject = e;\n        }, function () { });\n        // Send initialize message\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\n            _this._worker.getId(),\n            moduleId,\n            loaderConfiguration\n        ]);\n        _this._onModuleLoaded.then(function (availableMethods) {\n            var proxy = {};\n            for (var i = 0; i < availableMethods.length; i++) {\n                proxy[availableMethods[i]] = createProxyMethod(availableMethods[i], proxyMethodRequest);\n            }\n            lazyProxyFulfill(proxy);\n        }, function (e) {\n            lazyProxyReject(e);\n            _this._onError('Worker failed to load ' + moduleId, e);\n        });\n        // Create proxy to loaded code\n        var proxyMethodRequest = function (method, args) {\n            return _this._request(method, args);\n        };\n        var createProxyMethod = function (method, proxyMethodRequest) {\n            return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n            };\n        };\n        return _this;\n    }\n    SimpleWorkerClient.prototype.getProxyObject = function () {\n        // Do not allow chaining promises to cancel the proxy creation\n        return new ShallowCancelThenPromise(this._lazyProxy);\n    };\n    SimpleWorkerClient.prototype._request = function (method, args) {\n        var _this = this;\n        return new TPromise(function (c, e) {\n            _this._onModuleLoaded.then(function () {\n                _this._protocol.sendMessage(method, args).then(c, e);\n            }, e);\n        }, function () {\n            // Cancel intentionally not supported\n        });\n    };\n    SimpleWorkerClient.prototype._onError = function (message, error) {\n        console.error(message);\n        console.info(error);\n    };\n    return SimpleWorkerClient;\n}(Disposable));\nexport { SimpleWorkerClient };\n/**\n * Worker side\n */\nvar SimpleWorkerServer = /** @class */ (function () {\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n        var _this = this;\n        this._requestHandler = requestHandler;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                postSerializedMessage(msg);\n            },\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n        });\n    }\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\n        this._protocol.handleMessage(msg);\n    };\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return TPromise.as(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return TPromise.wrapError(e);\n        }\n    };\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n        var _this = this;\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandler) {\n            // static request handler\n            var methods = [];\n            for (var prop in this._requestHandler) {\n                if (typeof this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return TPromise.as(methods);\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        var cc;\n        var ee;\n        var r = new TPromise(function (c, e) {\n            cc = c;\n            ee = e;\n        });\n        // Use the global require to be sure to get the global config\n        self.require([moduleId], function () {\n            var result = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                result[_i] = arguments[_i];\n            }\n            var handlerModule = result[0];\n            _this._requestHandler = handlerModule.create();\n            var methods = [];\n            for (var prop in _this._requestHandler) {\n                if (typeof _this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            cc(methods);\n        }, ee);\n        return r;\n    };\n    return SimpleWorkerServer;\n}());\nexport { SimpleWorkerServer };\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { EditorSimpleWorkerImpl } from './common/services/editorSimpleWorker.js';\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nvar initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var editorWorker = new EditorSimpleWorkerImpl(foreignModule);\n    var simpleWorker = new SimpleWorkerServer(function (msg) {\n        self.postMessage(msg);\n    }, editorWorker);\n    self.onmessage = function (e) {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = function (e) {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n","/**\n * Extracted from https://github.com/winjs/winjs\n * Version: 4.4.0(ec3258a9f3a36805a187848984e3bb938044178d)\n * Copyright (c) Microsoft Corporation.\n * All Rights Reserved.\n * Licensed under the MIT License.\n */\nvar __winjs_exports;\n\n(function() {\n\nvar _modules = Object.create(null);//{};\n_modules[\"WinJS/Core/_WinJS\"] = {};\n\nvar _winjs = function(moduleId, deps, factory) {\n    var exports = {};\n    var exportsPassedIn = false;\n\n    var depsValues = deps.map(function(dep) {\n        if (dep === 'exports') {\n            exportsPassedIn = true;\n            return exports;\n        }\n        return _modules[dep];\n    });\n\n    var result = factory.apply({}, depsValues);\n\n    _modules[moduleId] = exportsPassedIn ? exports : result;\n};\n\n\n_winjs(\"WinJS/Core/_Global\", [], function () {\n    \"use strict\";\n\n    // Appease jshint\n    /* global window, self, global */\n\n    var globalObject =\n        typeof window !== 'undefined' ? window :\n        typeof self !== 'undefined' ? self :\n        typeof global !== 'undefined' ? global :\n        {};\n    return globalObject;\n});\n\n_winjs(\"WinJS/Core/_BaseCoreUtils\", [\"WinJS/Core/_Global\"], function baseCoreUtilsInit(_Global) {\n    \"use strict\";\n\n    var hasWinRT = !!_Global.Windows;\n\n    function markSupportedForProcessing(func) {\n        /// <signature helpKeyword=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// <summary locid=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// Marks a function as being compatible with declarative processing, such as WinJS.UI.processAll\n        /// or WinJS.Binding.processAll.\n        /// </summary>\n        /// <param name=\"func\" type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_p:func\">\n        /// The function to be marked as compatible with declarative processing.\n        /// </param>\n        /// <returns type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_returnValue\">\n        /// The input function.\n        /// </returns>\n        /// </signature>\n        func.supportedForProcessing = true;\n        return func;\n    }\n\n    var actualSetImmediate = null;\n\n    return {\n        hasWinRT: hasWinRT,\n        markSupportedForProcessing: markSupportedForProcessing,\n        _setImmediate: function (callback) {\n            // BEGIN monaco change\n            if (actualSetImmediate === null) {\n                if (_Global.setImmediate) {\n                    actualSetImmediate = _Global.setImmediate.bind(_Global);\n                } else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n                    actualSetImmediate = process.nextTick.bind(process);\n                } else {\n                    actualSetImmediate = _Global.setTimeout.bind(_Global);\n                }\n            }\n            actualSetImmediate(callback);\n            // END monaco change\n        }\n    };\n});\n_winjs(\"WinJS/Core/_WriteProfilerMark\", [\"WinJS/Core/_Global\"], function profilerInit(_Global) {\n    \"use strict\";\n\n    return _Global.msWriteProfilerMark || function () { };\n});\n_winjs(\"WinJS/Core/_Base\", [\"WinJS/Core/_WinJS\",\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_WriteProfilerMark\"], function baseInit(_WinJS, _Global, _BaseCoreUtils, _WriteProfilerMark) {\n    \"use strict\";\n\n    function initializeProperties(target, members, prefix) {\n        var keys = Object.keys(members);\n        var isArray = Array.isArray(target);\n        var properties;\n        var i, len;\n        for (i = 0, len = keys.length; i < len; i++) {\n            var key = keys[i];\n            var enumerable = key.charCodeAt(0) !== /*_*/95;\n            var member = members[key];\n            if (member && typeof member === 'object') {\n                if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n                    if (member.enumerable === undefined) {\n                        member.enumerable = enumerable;\n                    }\n                    if (prefix && member.setName && typeof member.setName === 'function') {\n                        member.setName(prefix + \".\" + key);\n                    }\n                    properties = properties || {};\n                    properties[key] = member;\n                    continue;\n                }\n            }\n            if (!enumerable) {\n                properties = properties || {};\n                properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true };\n                continue;\n            }\n            if (isArray) {\n                target.forEach(function (target) {\n                    target[key] = member;\n                });\n            } else {\n                target[key] = member;\n            }\n        }\n        if (properties) {\n            if (isArray) {\n                target.forEach(function (target) {\n                    Object.defineProperties(target, properties);\n                });\n            } else {\n                Object.defineProperties(target, properties);\n            }\n        }\n    }\n\n    (function () {\n\n        var _rootNamespace = _WinJS;\n        if (!_rootNamespace.Namespace) {\n            _rootNamespace.Namespace = Object.create(Object.prototype);\n        }\n\n        function createNamespace(parentNamespace, name) {\n            var currentNamespace = parentNamespace || {};\n            if (name) {\n                var namespaceFragments = name.split(\".\");\n                if (currentNamespace === _Global && namespaceFragments[0] === \"WinJS\") {\n                    currentNamespace = _WinJS;\n                    namespaceFragments.splice(0, 1);\n                }\n                for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n                    var namespaceName = namespaceFragments[i];\n                    if (!currentNamespace[namespaceName]) {\n                        Object.defineProperty(currentNamespace, namespaceName,\n                            { value: {}, writable: false, enumerable: true, configurable: true }\n                        );\n                    }\n                    currentNamespace = currentNamespace[namespaceName];\n                }\n            }\n            return currentNamespace;\n        }\n\n        function defineWithParent(parentNamespace, name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.defineWithParent\">\n            /// <summary locid=\"WinJS.Namespace.defineWithParent\">\n            /// Defines a new namespace with the specified name under the specified parent namespace.\n            /// </summary>\n            /// <param name=\"parentNamespace\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:parentNamespace\">\n            /// The parent namespace.\n            /// </param>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.defineWithParent_p:name\">\n            /// The name of the new namespace.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            var currentNamespace = createNamespace(parentNamespace, name);\n\n            if (members) {\n                initializeProperties(currentNamespace, members, name || \"<ANONYMOUS>\");\n            }\n\n            return currentNamespace;\n        }\n\n        function define(name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.define\">\n            /// <summary locid=\"WinJS.Namespace.define\">\n            /// Defines a new namespace with the specified name.\n            /// </summary>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.define_p:name\">\n            /// The name of the namespace. This could be a dot-separated name for nested namespaces.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.define_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.define_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            return defineWithParent(_Global, name, members);\n        }\n\n        var LazyStates = {\n            uninitialized: 1,\n            working: 2,\n            initialized: 3,\n        };\n\n        function lazy(f) {\n            var name;\n            var state = LazyStates.uninitialized;\n            var result;\n            return {\n                setName: function (value) {\n                    name = value;\n                },\n                get: function () {\n                    switch (state) {\n                        case LazyStates.initialized:\n                            return result;\n\n                        case LazyStates.uninitialized:\n                            state = LazyStates.working;\n                            try {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StartTM\");\n                                result = f();\n                            } finally {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StopTM\");\n                                state = LazyStates.uninitialized;\n                            }\n                            f = null;\n                            state = LazyStates.initialized;\n                            return result;\n\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            throw \"Illegal\";\n                    }\n                },\n                set: function (value) {\n                    switch (state) {\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            state = LazyStates.initialized;\n                            result = value;\n                            break;\n                    }\n                },\n                enumerable: true,\n                configurable: true,\n            };\n        }\n\n        // helper for defining AMD module members\n        function moduleDefine(exports, name, members) {\n            var target = [exports];\n            var publicNS = null;\n            if (name) {\n                publicNS = createNamespace(_Global, name);\n                target.push(publicNS);\n            }\n            initializeProperties(target, members, name || \"<ANONYMOUS>\");\n            return publicNS;\n        }\n\n        // Establish members of the \"WinJS.Namespace\" namespace\n        Object.defineProperties(_rootNamespace.Namespace, {\n\n            defineWithParent: { value: defineWithParent, writable: true, enumerable: true, configurable: true },\n\n            define: { value: define, writable: true, enumerable: true, configurable: true },\n\n            _lazy: { value: lazy, writable: true, enumerable: true, configurable: true },\n\n            _moduleDefine: { value: moduleDefine, writable: true, enumerable: true, configurable: true }\n\n        });\n\n    })();\n\n    (function () {\n\n        function define(constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.define\">\n            /// <summary locid=\"WinJS.Class.define\">\n            /// Defines a class using the given constructor and the specified instance members.\n            /// </summary>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.define_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:staticMembers\">\n            /// The set of static fields, properties, and methods made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.define_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            _BaseCoreUtils.markSupportedForProcessing(constructor);\n            if (instanceMembers) {\n                initializeProperties(constructor.prototype, instanceMembers);\n            }\n            if (staticMembers) {\n                initializeProperties(constructor, staticMembers);\n            }\n            return constructor;\n        }\n\n        function derive(baseClass, constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.derive\">\n            /// <summary locid=\"WinJS.Class.derive\">\n            /// Creates a sub-class based on the supplied baseClass parameter, using prototypal inheritance.\n            /// </summary>\n            /// <param name=\"baseClass\" type=\"Function\" locid=\"WinJS.Class.derive_p:baseClass\">\n            /// The class to inherit from.\n            /// </param>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.derive_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:staticMembers\">\n            /// The set of static fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.derive_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            if (baseClass) {\n                constructor = constructor || function () { };\n                var basePrototype = baseClass.prototype;\n                constructor.prototype = Object.create(basePrototype);\n                _BaseCoreUtils.markSupportedForProcessing(constructor);\n                Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor, writable: true, configurable: true, enumerable: true });\n                if (instanceMembers) {\n                    initializeProperties(constructor.prototype, instanceMembers);\n                }\n                if (staticMembers) {\n                    initializeProperties(constructor, staticMembers);\n                }\n                return constructor;\n            } else {\n                return define(constructor, instanceMembers, staticMembers);\n            }\n        }\n\n        function mix(constructor) {\n            /// <signature helpKeyword=\"WinJS.Class.mix\">\n            /// <summary locid=\"WinJS.Class.mix\">\n            /// Defines a class using the given constructor and the union of the set of instance members\n            /// specified by all the mixin objects. The mixin parameter list is of variable length.\n            /// </summary>\n            /// <param name=\"constructor\" locid=\"WinJS.Class.mix_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.mix_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            var i, len;\n            for (i = 1, len = arguments.length; i < len; i++) {\n                initializeProperties(constructor.prototype, arguments[i]);\n            }\n            return constructor;\n        }\n\n        // Establish members of \"WinJS.Class\" namespace\n        _WinJS.Namespace.define(\"WinJS.Class\", {\n            define: define,\n            derive: derive,\n            mix: mix\n        });\n\n    })();\n\n    return {\n        Namespace: _WinJS.Namespace,\n        Class: _WinJS.Class\n    };\n\n});\n_winjs(\"WinJS/Core/_ErrorFromName\", [\"WinJS/Core/_Base\"], function errorsInit(_Base) {\n    \"use strict\";\n\n    var ErrorFromName = _Base.Class.derive(Error, function (name, message) {\n        /// <signature helpKeyword=\"WinJS.ErrorFromName\">\n        /// <summary locid=\"WinJS.ErrorFromName\">\n        /// Creates an Error object with the specified name and message properties.\n        /// </summary>\n        /// <param name=\"name\" type=\"String\" locid=\"WinJS.ErrorFromName_p:name\">The name of this error. The name is meant to be consumed programmatically and should not be localized.</param>\n        /// <param name=\"message\" type=\"String\" optional=\"true\" locid=\"WinJS.ErrorFromName_p:message\">The message for this error. The message is meant to be consumed by humans and should be localized.</param>\n        /// <returns type=\"Error\" locid=\"WinJS.ErrorFromName_returnValue\">Error instance with .name and .message properties populated</returns>\n        /// </signature>\n        this.name = name;\n        this.message = message || name;\n    }, {\n        /* empty */\n    }, {\n        supportedForProcessing: false,\n    });\n\n    _Base.Namespace.define(\"WinJS\", {\n        // ErrorFromName establishes a simple pattern for returning error codes.\n        //\n        ErrorFromName: ErrorFromName\n    });\n\n    return ErrorFromName;\n\n});\n\n\n_winjs(\"WinJS/Core/_Events\", [\"exports\",\"WinJS/Core/_Base\"], function eventsInit(exports, _Base) {\n    \"use strict\";\n\n\n    function createEventProperty(name) {\n        var eventPropStateName = \"_on\" + name + \"state\";\n\n        return {\n            get: function () {\n                var state = this[eventPropStateName];\n                return state && state.userHandler;\n            },\n            set: function (handler) {\n                var state = this[eventPropStateName];\n                if (handler) {\n                    if (!state) {\n                        state = { wrapper: function (evt) { return state.userHandler(evt); }, userHandler: handler };\n                        Object.defineProperty(this, eventPropStateName, { value: state, enumerable: false, writable:true, configurable: true });\n                        this.addEventListener(name, state.wrapper, false);\n                    }\n                    state.userHandler = handler;\n                } else if (state) {\n                    this.removeEventListener(name, state.wrapper, false);\n                    this[eventPropStateName] = null;\n                }\n            },\n            enumerable: true\n        };\n    }\n\n    function createEventProperties() {\n        /// <signature helpKeyword=\"WinJS.Utilities.createEventProperties\">\n        /// <summary locid=\"WinJS.Utilities.createEventProperties\">\n        /// Creates an object that has one property for each name passed to the function.\n        /// </summary>\n        /// <param name=\"events\" locid=\"WinJS.Utilities.createEventProperties_p:events\">\n        /// A variable list of property names.\n        /// </param>\n        /// <returns type=\"Object\" locid=\"WinJS.Utilities.createEventProperties_returnValue\">\n        /// The object with the specified properties. The names of the properties are prefixed with 'on'.\n        /// </returns>\n        /// </signature>\n        var props = {};\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            var name = arguments[i];\n            props[\"on\" + name] = createEventProperty(name);\n        }\n        return props;\n    }\n\n    var EventMixinEvent = _Base.Class.define(\n        function EventMixinEvent_ctor(type, detail, target) {\n            this.detail = detail;\n            this.target = target;\n            this.timeStamp = Date.now();\n            this.type = type;\n        },\n        {\n            bubbles: { value: false, writable: false },\n            cancelable: { value: false, writable: false },\n            currentTarget: {\n                get: function () { return this.target; }\n            },\n            defaultPrevented: {\n                get: function () { return this._preventDefaultCalled; }\n            },\n            trusted: { value: false, writable: false },\n            eventPhase: { value: 0, writable: false },\n            target: null,\n            timeStamp: null,\n            type: null,\n\n            preventDefault: function () {\n                this._preventDefaultCalled = true;\n            },\n            stopImmediatePropagation: function () {\n                this._stopImmediatePropagationCalled = true;\n            },\n            stopPropagation: function () {\n            }\n        }, {\n            supportedForProcessing: false,\n        }\n    );\n\n    var eventMixin = {\n        _listeners: null,\n\n        addEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// Adds an event listener to the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:listener\">\n            /// The listener to invoke when the event is raised.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:useCapture\">\n            /// if true initiates capture, otherwise false.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            this._listeners = this._listeners || {};\n            var eventListeners = (this._listeners[type] = this._listeners[type] || []);\n            for (var i = 0, len = eventListeners.length; i < len; i++) {\n                var l = eventListeners[i];\n                if (l.useCapture === useCapture && l.listener === listener) {\n                    return;\n                }\n            }\n            eventListeners.push({ listener: listener, useCapture: useCapture });\n        },\n        dispatchEvent: function (type, details) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// Raises an event of the specified type and with the specified additional properties.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"details\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:details\">\n            /// The set of additional properties to be attached to the event object when the event is raised.\n            /// </param>\n            /// <returns type=\"Boolean\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_returnValue\">\n            /// true if preventDefault was called on the event.\n            /// </returns>\n            /// </signature>\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                var eventValue = new EventMixinEvent(type, details, this);\n                // Need to copy the array to protect against people unregistering while we are dispatching\n                listeners = listeners.slice(0, listeners.length);\n                for (var i = 0, len = listeners.length; i < len && !eventValue._stopImmediatePropagationCalled; i++) {\n                    listeners[i].listener(eventValue);\n                }\n                return eventValue.defaultPrevented || false;\n            }\n            return false;\n        },\n        removeEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// Removes an event listener from the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:listener\">\n            /// The listener to remove.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:useCapture\">\n            /// Specifies whether to initiate capture.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    var l = listeners[i];\n                    if (l.listener === listener && l.useCapture === useCapture) {\n                        listeners.splice(i, 1);\n                        if (listeners.length === 0) {\n                            delete this._listeners[type];\n                        }\n                        // Only want to remove one element for each call to removeEventListener\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    _Base.Namespace._moduleDefine(exports, \"WinJS.Utilities\", {\n        _createEventProperty: createEventProperty,\n        createEventProperties: createEventProperties,\n        eventMixin: eventMixin\n    });\n\n});\n\n\n_winjs(\"WinJS/Core/_Trace\", [\"WinJS/Core/_Global\"], function traceInit(_Global) {\n    \"use strict\";\n\n    function nop(v) {\n        return v;\n    }\n\n    return {\n        _traceAsyncOperationStarting: (_Global.Debug && _Global.Debug.msTraceAsyncOperationStarting && _Global.Debug.msTraceAsyncOperationStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncOperationCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncOperationCompleted && _Global.Debug.msTraceAsyncOperationCompleted.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackStarting: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackStarting && _Global.Debug.msTraceAsyncCallbackStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackCompleted && _Global.Debug.msTraceAsyncCallbackCompleted.bind(_Global.Debug)) || nop\n    };\n});\n_winjs(\"WinJS/Promise/_StateMachine\", [\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_Base\",\"WinJS/Core/_ErrorFromName\",\"WinJS/Core/_Events\",\"WinJS/Core/_Trace\"], function promiseStateMachineInit(_Global, _BaseCoreUtils, _Base, _ErrorFromName, _Events, _Trace) {\n    \"use strict\";\n\n    _Global.Debug && (_Global.Debug.setNonUserCodeExceptions = true);\n\n    var ListenerType = _Base.Class.mix(_Base.Class.define(null, { /*empty*/ }, { supportedForProcessing: false }), _Events.eventMixin);\n    var promiseEventListeners = new ListenerType();\n    // make sure there is a listeners collection so that we can do a more trivial check below\n    promiseEventListeners._listeners = {};\n    var errorET = \"error\";\n    var canceledName = \"Canceled\";\n    var tagWithStack = false;\n    var tag = {\n        promise: 0x01,\n        thenPromise: 0x02,\n        errorPromise: 0x04,\n        exceptionPromise: 0x08,\n        completePromise: 0x10,\n    };\n    tag.all = tag.promise | tag.thenPromise | tag.errorPromise | tag.exceptionPromise | tag.completePromise;\n\n    //\n    // Global error counter, for each error which enters the system we increment this once and then\n    // the error number travels with the error as it traverses the tree of potential handlers.\n    //\n    // When someone has registered to be told about errors (WinJS.Promise.callonerror) promises\n    // which are in error will get tagged with a ._errorId field. This tagged field is the\n    // contract by which nested promises with errors will be identified as chaining for the\n    // purposes of the callonerror semantics. If a nested promise in error is encountered without\n    // a ._errorId it will be assumed to be foreign and treated as an interop boundary and\n    // a new error id will be minted.\n    //\n    var error_number = 1;\n\n    //\n    // The state machine has a interesting hiccup in it with regards to notification, in order\n    // to flatten out notification and avoid recursion for synchronous completion we have an\n    // explicit set of *_notify states which are responsible for notifying their entire tree\n    // of children. They can do this because they know that immediate children are always\n    // ThenPromise instances and we can therefore reach into their state to access the\n    // _listeners collection.\n    //\n    // So, what happens is that a Promise will be fulfilled through the _completed or _error\n    // messages at which point it will enter a *_notify state and be responsible for to move\n    // its children into an (as appropriate) success or error state and also notify that child's\n    // listeners of the state transition, until leaf notes are reached.\n    //\n\n    var state_created,              // -> working\n        state_working,              // -> error | error_notify | success | success_notify | canceled | waiting\n        state_waiting,              // -> error | error_notify | success | success_notify | waiting_canceled\n        state_waiting_canceled,     // -> error | error_notify | success | success_notify | canceling\n        state_canceled,             // -> error | error_notify | success | success_notify | canceling\n        state_canceling,            // -> error_notify\n        state_success_notify,       // -> success\n        state_success,              // -> .\n        state_error_notify,         // -> error\n        state_error;                // -> .\n\n    // Noop function, used in the various states to indicate that they don't support a given\n    // message. Named with the somewhat cute name '_' because it reads really well in the states.\n\n    function _() { }\n\n    // Initial state\n    //\n    state_created = {\n        name: \"created\",\n        enter: function (promise) {\n            promise._setState(state_working);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Ready state, waiting for a message (completed/error/progress), able to be canceled\n    //\n    state_working = {\n        name: \"working\",\n        enter: _,\n        cancel: function (promise) {\n            promise._setState(state_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting state, if a promise is completed with a value which is itself a promise\n    // (has a then() method) it signs up to be informed when that child promise is\n    // fulfilled at which point it will be fulfilled with that value.\n    //\n    state_waiting = {\n        name: \"waiting\",\n        enter: function (promise) {\n            var waitedUpon = promise._value;\n            // We can special case our own intermediate promises which are not in a\n            //  terminal state by just pushing this promise as a listener without\n            //  having to create new indirection functions\n            if (waitedUpon instanceof ThenPromise &&\n                waitedUpon._state !== state_error &&\n                waitedUpon._state !== state_success) {\n                pushListener(waitedUpon, { promise: promise });\n            } else {\n                var error = function (value) {\n                    if (waitedUpon._errorId) {\n                        promise._chainedError(value, waitedUpon);\n                    } else {\n                        // Because this is an interop boundary we want to indicate that this\n                        //  error has been handled by the promise infrastructure before we\n                        //  begin a new handling chain.\n                        //\n                        callonerror(promise, value, detailsForHandledError, waitedUpon, error);\n                        promise._error(value);\n                    }\n                };\n                error.handlesOnError = true;\n                waitedUpon.then(\n                    promise._completed.bind(promise),\n                    error,\n                    promise._progress.bind(promise)\n                );\n            }\n        },\n        cancel: function (promise) {\n            promise._setState(state_waiting_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting canceled state, when a promise has been in a waiting state and receives a\n    // request to cancel its pending work it will forward that request to the child promise\n    // and then waits to be informed of the result. This promise moves itself into the\n    // canceling state but understands that the child promise may instead push it to a\n    // different state.\n    //\n    state_waiting_canceled = {\n        name: \"waiting_canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. Triggering a cancel on the promise\n            // that we are waiting upon may result in a different state transition\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            var waitedUpon = promise._value;\n            if (waitedUpon.cancel) {\n                waitedUpon.cancel();\n            }\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceled state, moves to the canceling state and then tells the promise to do\n    // whatever it might need to do on cancelation.\n    //\n    state_canceled = {\n        name: \"canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. The _cancelAction may change the state\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            promise._cancelAction();\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceling state, commits to the promise moving to an error state with an error\n    // object whose 'name' and 'message' properties contain the string \"Canceled\"\n    //\n    state_canceling = {\n        name: \"canceling\",\n        enter: function (promise) {\n            var error = new Error(canceledName);\n            error.name = error.message;\n            promise._value = error;\n            promise._setState(state_error_notify);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success notify state, moves a promise to the success state and notifies all children\n    //\n    state_success_notify = {\n        name: \"complete_notify\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_success);\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success state, moves a promise to the success state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_success = {\n        name: \"success\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error notify state, moves a promise to the error state and notifies all children\n    //\n    state_error_notify = {\n        name: \"error_notify\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_error);\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error state, moves a promise to the error state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_error = {\n        name: \"error\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    //\n    // The statemachine implementation follows a very particular pattern, the states are specified\n    // as static stateless bags of functions which are then indirected through the state machine\n    // instance (a Promise). As such all of the functions on each state have the promise instance\n    // passed to them explicitly as a parameter and the Promise instance members do a little\n    // dance where they indirect through the state and insert themselves in the argument list.\n    //\n    // We could instead call directly through the promise states however then every caller\n    // would have to remember to do things like pumping the state machine to catch state transitions.\n    //\n\n    var PromiseStateMachine = _Base.Class.define(null, {\n        _listeners: null,\n        _nextState: null,\n        _state: null,\n        _value: null,\n\n        cancel: function () {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n            /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n            /// already been fulfilled and cancellation is supported, the promise enters\n            /// the error state with a value of Error(\"Canceled\").\n            /// </summary>\n            /// </signature>\n            this._state.cancel(this);\n            this._run();\n        },\n        done: function Promise_done(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            ///\n            /// After the handlers have finished executing, this function throws any error that would have been returned\n            /// from then() as a promise in the error state.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The fulfilled value is passed as the single argument. If the value is null,\n            /// the fulfilled value is returned. The value returned\n            /// from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while executing the function, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function is the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n            /// the function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// </signature>\n            this._state.done(this, onComplete, onError, onProgress);\n        },\n        then: function Promise_then(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The value is passed as the single argument. If the value is null, the value is returned.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while this function is being executed, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n            /// The function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n            /// The promise whose value is the result of executing the complete or\n            /// error function.\n            /// </returns>\n            /// </signature>\n            // BEGIN monaco change\n            if (this.then !== Promise_then) {\n                this.then(onComplete, onError, onProgress);\n                return;\n            }\n            // END monaco change\n            return this._state.then(this, onComplete, onError, onProgress);\n        },\n\n        _chainedError: function (value, context) {\n            var result = this._state._error(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _completed: function (value) {\n            var result = this._state._completed(this, value);\n            this._run();\n            return result;\n        },\n        _error: function (value) {\n            var result = this._state._error(this, value, detailsForError);\n            this._run();\n            return result;\n        },\n        _progress: function (value) {\n            this._state._progress(this, value);\n        },\n        _setState: function (state) {\n            this._nextState = state;\n        },\n        _setCompleteValue: function (value) {\n            this._state._setCompleteValue(this, value);\n            this._run();\n        },\n        _setChainedErrorValue: function (value, context) {\n            var result = this._state._setErrorValue(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _setExceptionValue: function (value) {\n            var result = this._state._setErrorValue(this, value, detailsForException);\n            this._run();\n            return result;\n        },\n        _run: function () {\n            while (this._nextState) {\n                this._state = this._nextState;\n                this._nextState = null;\n                this._state.enter(this);\n            }\n        }\n    }, {\n        supportedForProcessing: false\n    });\n\n    //\n    // Implementations of shared state machine code.\n    //\n\n    function completed(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success_notify;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function createErrorDetails(exception, error, promise, id, parent, handler) {\n        return {\n            exception: exception,\n            error: error,\n            promise: promise,\n            handler: handler,\n            id: id,\n            parent: parent\n        };\n    }\n    function detailsForHandledError(promise, errorValue, context, handler) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context,\n            handler\n        );\n    }\n    function detailsForChainedError(promise, errorValue, context) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        setErrorInfo(promise, errorId, exception);\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context\n        );\n    }\n    function detailsForError(promise, errorValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId);\n        return createErrorDetails(\n            null,\n            errorValue,\n            promise,\n            errorId\n        );\n    }\n    function detailsForException(promise, exceptionValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId, true);\n        return createErrorDetails(\n            exceptionValue,\n            null,\n            promise,\n            errorId\n        );\n    }\n    function done(promise, onComplete, onError, onProgress) {\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.done\");\n        pushListener(promise, { c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n    }\n    function error(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error_notify);\n    }\n    function notifySuccess(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onComplete = listener.c;\n            var target = listener.promise;\n\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, _Global.Debug && _Global.Debug.MS_ASYNC_OP_STATUS_SUCCESS);\n\n            if (target) {\n                _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                try {\n                    target._setCompleteValue(onComplete ? onComplete(value) : value);\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    _Trace._traceAsyncCallbackCompleted();\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                CompletePromise.prototype.done.call(promise, onComplete);\n            }\n        }\n    }\n    function notifyError(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onError = listener.e;\n            var target = listener.promise;\n\n            var errorID = _Global.Debug && (value && value.name === canceledName ? _Global.Debug.MS_ASYNC_OP_STATUS_CANCELED : _Global.Debug.MS_ASYNC_OP_STATUS_ERROR);\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, errorID);\n\n            if (target) {\n                var asyncCallbackStarted = false;\n                try {\n                    if (onError) {\n                        _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                        asyncCallbackStarted = true;\n                        if (!onError.handlesOnError) {\n                            callonerror(target, value, detailsForHandledError, promise, onError);\n                        }\n                        target._setCompleteValue(onError(value));\n                    } else {\n                        target._setChainedErrorValue(value, promise);\n                    }\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    if (asyncCallbackStarted) {\n                        _Trace._traceAsyncCallbackCompleted();\n                    }\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                ErrorPromise.prototype.done.call(promise, null, onError);\n            }\n        }\n    }\n    function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {\n        if (promiseEventListeners._listeners[errorET]) {\n            if (value instanceof Error && value.message === canceledName) {\n                return;\n            }\n            promiseEventListeners.dispatchEvent(errorET, onerrorDetailsGenerator(promise, value, context, handler));\n        }\n    }\n    function progress(promise, value) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            var i, len;\n            for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n                var listener = len === 1 ? listeners : listeners[i];\n                var onProgress = listener.p;\n                if (onProgress) {\n                    try { onProgress(value); } catch (ex) { }\n                }\n                if (!(listener.c || listener.e) && listener.promise) {\n                    listener.promise._progress(value);\n                }\n            }\n        }\n    }\n    function pushListener(promise, listener) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            // We may have either a single listener (which will never be wrapped in an array)\n            // or 2+ listeners (which will be wrapped). Since we are now adding one more listener\n            // we may have to wrap the single listener before adding the second.\n            listeners = Array.isArray(listeners) ? listeners : [listeners];\n            listeners.push(listener);\n        } else {\n            listeners = listener;\n        }\n        promise._listeners = listeners;\n    }\n    // The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves\n    // a promise directly to the success/error state without starting another notification pass (because one\n    // is already ongoing).\n    function setErrorInfo(promise, errorId, isException) {\n        promise._isException = isException || false;\n        promise._errorId = errorId;\n    }\n    function setErrorValue(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error);\n    }\n    function setCompleteValue(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function then(promise, onComplete, onError, onProgress) {\n        var result = new ThenPromise(promise);\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.then\");\n        pushListener(promise, { promise: result, c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n        return result;\n    }\n\n    //\n    // Internal implementation detail promise, ThenPromise is created when a promise needs\n    // to be returned from a then() method.\n    //\n    var ThenPromise = _Base.Class.derive(PromiseStateMachine,\n        function (creator) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.thenPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._creator = creator;\n            this._setState(state_created);\n            this._run();\n        }, {\n            _creator: null,\n\n            _cancelAction: function () { if (this._creator) { this._creator.cancel(); } },\n            _cleanupAction: function () { this._creator = null; }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Slim promise implementations for already completed promises, these are created\n    // under the hood on synchronous completion paths as well as by WinJS.Promise.wrap\n    // and WinJS.Promise.wrapError.\n    //\n\n    var ErrorPromise = _Base.Class.define(\n        function ErrorPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.errorPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForError);\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function ErrorPromise_done(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                var value = this._value;\n                if (onError) {\n                    try {\n                        if (!onError.handlesOnError) {\n                            callonerror(null, value, detailsForHandledError, this, onError);\n                        }\n                        var result = onError(value);\n                        if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                            // If a promise is returned we need to wait on it.\n                            result.done();\n                        }\n                        return;\n                    } catch (ex) {\n                        value = ex;\n                    }\n                }\n                if (value instanceof Error && value.message === canceledName) {\n                    // suppress cancel\n                    return;\n                }\n                // force the exception to be thrown asyncronously to avoid any try/catch blocks\n                //\n                Promise._doneHandler(value);\n            },\n            then: function ErrorPromise_then(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n\n                // If the promise is already in a error state and no error handler is provided\n                // we optimize by simply returning the promise instead of creating a new one.\n                //\n                if (!onError) { return this; }\n                var result;\n                var value = this._value;\n                try {\n                    if (!onError.handlesOnError) {\n                        callonerror(null, value, detailsForHandledError, this, onError);\n                    }\n                    result = new CompletePromise(onError(value));\n                } catch (ex) {\n                    // If the value throw from the error handler is the same as the value\n                    // provided to the error handler then there is no need for a new promise.\n                    //\n                    if (ex === value) {\n                        result = this;\n                    } else {\n                        result = new ExceptionPromise(ex);\n                    }\n                }\n                return result;\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var ExceptionPromise = _Base.Class.derive(ErrorPromise,\n        function ExceptionPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.exceptionPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForException);\n        }, {\n            /* empty */\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var CompletePromise = _Base.Class.define(\n        function CompletePromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.completePromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                var result = new ThenPromise(null);\n                result._setCompleteValue(value);\n                return result;\n            }\n            this._value = value;\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function CompletePromise_done(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                if (!onComplete) { return; }\n                try {\n                    var result = onComplete(this._value);\n                    if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                        result.done();\n                    }\n                } catch (ex) {\n                    // force the exception to be thrown asynchronously to avoid any try/catch blocks\n                    Promise._doneHandler(ex);\n                }\n            },\n            then: function CompletePromise_then(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n                try {\n                    // If the value returned from the completion handler is the same as the value\n                    // provided to the completion handler then there is no need for a new promise.\n                    //\n                    var newValue = onComplete ? onComplete(this._value) : this._value;\n                    return newValue === this._value ? this : new CompletePromise(newValue);\n                } catch (ex) {\n                    return new ExceptionPromise(ex);\n                }\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Promise is the user-creatable WinJS.Promise object.\n    //\n\n    function timeout(timeoutMS) {\n        var id;\n        return new Promise(\n            function (c) {\n                if (timeoutMS) {\n                    id = _Global.setTimeout(c, timeoutMS);\n                } else {\n                    _BaseCoreUtils._setImmediate(c);\n                }\n            },\n            function () {\n                if (id) {\n                    _Global.clearTimeout(id);\n                }\n            }\n        );\n    }\n\n    function timeoutWithPromise(timeout, promise) {\n        var cancelPromise = function () { promise.cancel(); };\n        var cancelTimeout = function () { timeout.cancel(); };\n        timeout.then(cancelPromise);\n        promise.then(cancelTimeout, cancelTimeout);\n        return promise;\n    }\n\n    var staticCanceledPromise;\n\n    var Promise = _Base.Class.derive(PromiseStateMachine,\n        function Promise_ctor(init, oncancel) {\n            /// <signature helpKeyword=\"WinJS.Promise\">\n            /// <summary locid=\"WinJS.Promise\">\n            /// A promise provides a mechanism to schedule work to be done on a value that\n            /// has not yet been computed. It is a convenient abstraction for managing\n            /// interactions with asynchronous APIs.\n            /// </summary>\n            /// <param name=\"init\" type=\"Function\" locid=\"WinJS.Promise_p:init\">\n            /// The function that is called during construction of the  promise. The function\n            /// is given three arguments (complete, error, progress). Inside this function\n            /// you should add event listeners for the notifications supported by this value.\n            /// </param>\n            /// <param name=\"oncancel\" optional=\"true\" locid=\"WinJS.Promise_p:oncancel\">\n            /// The function to call if a consumer of this promise wants\n            /// to cancel its undone work. Promises are not required to\n            /// support cancellation.\n            /// </param>\n            /// </signature>\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.promise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._oncancel = oncancel;\n            this._setState(state_created);\n            this._run();\n\n            try {\n                var complete = this._completed.bind(this);\n                var error = this._error.bind(this);\n                var progress = this._progress.bind(this);\n                init(complete, error, progress);\n            } catch (ex) {\n                this._setExceptionValue(ex);\n            }\n        }, {\n            _oncancel: null,\n\n            _cancelAction: function () {\n                // BEGIN monaco change\n                try {\n                    if (this._oncancel) {\n                        this._oncancel();\n                    } else {\n                        throw new Error('Promise did not implement oncancel');\n                    }\n                } catch (ex) {\n                    // Access fields to get them created\n                    var msg = ex.message;\n                    var stack = ex.stack;\n                    promiseEventListeners.dispatchEvent('error', ex);\n                }\n                // END monaco change\n            },\n            _cleanupAction: function () { this._oncancel = null; }\n        }, {\n\n            addEventListener: function Promise_addEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.addEventListener\">\n                /// <summary locid=\"WinJS.Promise.addEventListener\">\n                /// Adds an event listener to the control.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.addEventListener_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"listener\" locid=\"WinJS.Promise.addEventListener_p:listener\">\n                /// The listener to invoke when the event is raised.\n                /// </param>\n                /// <param name=\"capture\" locid=\"WinJS.Promise.addEventListener_p:capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.addEventListener(eventType, listener, capture);\n            },\n            any: function Promise_any(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.any\">\n                /// <summary locid=\"WinJS.Promise.any\">\n                /// Returns a promise that is fulfilled when one of the input promises\n                /// has been fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Array\" locid=\"WinJS.Promise.any_p:values\">\n                /// An array that contains promise objects or objects whose property\n                /// values include promise objects.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.any_returnValue\">\n                /// A promise that on fulfillment yields the value of the input (complete or error).\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error) {\n                        var keys = Object.keys(values);\n                        if (keys.length === 0) {\n                            complete();\n                        }\n                        var canceled = 0;\n                        keys.forEach(function (key) {\n                            Promise.as(values[key]).then(\n                                function () { complete({ key: key, value: values[key] }); },\n                                function (e) {\n                                    if (e instanceof Error && e.name === canceledName) {\n                                        if ((++canceled) === keys.length) {\n                                            complete(Promise.cancel);\n                                        }\n                                        return;\n                                    }\n                                    error({ key: key, value: values[key] });\n                                }\n                            );\n                        });\n                    },\n                    function () {\n                        var keys = Object.keys(values);\n                        keys.forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            as: function Promise_as(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.as\">\n                /// <summary locid=\"WinJS.Promise.as\">\n                /// Returns a promise. If the object is already a promise it is returned;\n                /// otherwise the object is wrapped in a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.as_p:value\">\n                /// The value to be treated as a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.as_returnValue\">\n                /// A promise.\n                /// </returns>\n                /// </signature>\n                if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                    return value;\n                }\n                return new CompletePromise(value);\n            },\n            /// <field type=\"WinJS.Promise\" helpKeyword=\"WinJS.Promise.cancel\" locid=\"WinJS.Promise.cancel\">\n            /// Canceled promise value, can be returned from a promise completion handler\n            /// to indicate cancelation of the promise chain.\n            /// </field>\n            cancel: {\n                get: function () {\n                    return (staticCanceledPromise = staticCanceledPromise || new ErrorPromise(new _ErrorFromName(canceledName)));\n                }\n            },\n            dispatchEvent: function Promise_dispatchEvent(eventType, details) {\n                /// <signature helpKeyword=\"WinJS.Promise.dispatchEvent\">\n                /// <summary locid=\"WinJS.Promise.dispatchEvent\">\n                /// Raises an event of the specified type and properties.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.dispatchEvent_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"details\" locid=\"WinJS.Promise.dispatchEvent_p:details\">\n                /// The set of additional properties to be attached to the event object.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.dispatchEvent_returnValue\">\n                /// Specifies whether preventDefault was called on the event.\n                /// </returns>\n                /// </signature>\n                return promiseEventListeners.dispatchEvent(eventType, details);\n            },\n            is: function Promise_is(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.is\">\n                /// <summary locid=\"WinJS.Promise.is\">\n                /// Determines whether a value fulfills the promise contract.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.is_p:value\">\n                /// A value that may be a promise.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.is_returnValue\">\n                /// true if the specified value is a promise, otherwise false.\n                /// </returns>\n                /// </signature>\n                return value && typeof value === \"object\" && typeof value.then === \"function\";\n            },\n            join: function Promise_join(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.join\">\n                /// <summary locid=\"WinJS.Promise.join\">\n                /// Creates a promise that is fulfilled when all the values are fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Object\" locid=\"WinJS.Promise.join_p:values\">\n                /// An object whose fields contain values, some of which may be promises.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.join_returnValue\">\n                /// A promise whose value is an object with the same field names as those of the object in the values parameter, where\n                /// each field value is the fulfilled value of a promise.\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error, progress) {\n                        var keys = Object.keys(values);\n                        var errors = Array.isArray(values) ? [] : {};\n                        var results = Array.isArray(values) ? [] : {};\n                        var undefineds = 0;\n                        var pending = keys.length;\n                        var argDone = function (key) {\n                            if ((--pending) === 0) {\n                                var errorCount = Object.keys(errors).length;\n                                if (errorCount === 0) {\n                                    complete(results);\n                                } else {\n                                    var canceledCount = 0;\n                                    keys.forEach(function (key) {\n                                        var e = errors[key];\n                                        if (e instanceof Error && e.name === canceledName) {\n                                            canceledCount++;\n                                        }\n                                    });\n                                    if (canceledCount === errorCount) {\n                                        complete(Promise.cancel);\n                                    } else {\n                                        error(errors);\n                                    }\n                                }\n                            } else {\n                                progress({ Key: key, Done: true });\n                            }\n                        };\n                        keys.forEach(function (key) {\n                            var value = values[key];\n                            if (value === undefined) {\n                                undefineds++;\n                            } else {\n                                Promise.then(value,\n                                    function (value) { results[key] = value; argDone(key); },\n                                    function (value) { errors[key] = value; argDone(key); }\n                                );\n                            }\n                        });\n                        pending -= undefineds;\n                        if (pending === 0) {\n                            complete(results);\n                            return;\n                        }\n                    },\n                    function () {\n                        Object.keys(values).forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            removeEventListener: function Promise_removeEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.removeEventListener\">\n                /// <summary locid=\"WinJS.Promise.removeEventListener\">\n                /// Removes an event listener from the control.\n                /// </summary>\n                /// <param name='eventType' locid=\"WinJS.Promise.removeEventListener_eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name='listener' locid=\"WinJS.Promise.removeEventListener_listener\">\n                /// The listener to remove.\n                /// </param>\n                /// <param name='capture' locid=\"WinJS.Promise.removeEventListener_capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.removeEventListener(eventType, listener, capture);\n            },\n            supportedForProcessing: false,\n            then: function Promise_then(value, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.then\">\n                /// <summary locid=\"WinJS.Promise.then\">\n                /// A static version of the promise instance method then().\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.then_p:value\">\n                /// the value to be treated as a promise.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.then_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If it is null, the promise simply\n                /// returns the value. The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.then_returnValue\">\n                /// A promise whose value is the result of executing the provided complete function.\n                /// </returns>\n                /// </signature>\n                return Promise.as(value).then(onComplete, onError, onProgress);\n            },\n            thenEach: function Promise_thenEach(values, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.thenEach\">\n                /// <summary locid=\"WinJS.Promise.thenEach\">\n                /// Performs an operation on all the input promises and returns a promise\n                /// that has the shape of the input and contains the result of the operation\n                /// that has been performed on each input.\n                /// </summary>\n                /// <param name=\"values\" locid=\"WinJS.Promise.thenEach_p:values\">\n                /// A set of values (which could be either an array or an object) of which some or all are promises.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.thenEach_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If the value is null, the promise returns the value.\n                /// The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.thenEach_returnValue\">\n                /// A promise that is the result of calling Promise.join on the values parameter.\n                /// </returns>\n                /// </signature>\n                var result = Array.isArray(values) ? [] : {};\n                Object.keys(values).forEach(function (key) {\n                    result[key] = Promise.as(values[key]).then(onComplete, onError, onProgress);\n                });\n                return Promise.join(result);\n            },\n            timeout: function Promise_timeout(time, promise) {\n                /// <signature helpKeyword=\"WinJS.Promise.timeout\">\n                /// <summary locid=\"WinJS.Promise.timeout\">\n                /// Creates a promise that is fulfilled after a timeout.\n                /// </summary>\n                /// <param name=\"timeout\" type=\"Number\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:timeout\">\n                /// The timeout period in milliseconds. If this value is zero or not specified\n                /// setImmediate is called, otherwise setTimeout is called.\n                /// </param>\n                /// <param name=\"promise\" type=\"Promise\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:promise\">\n                /// A promise that will be canceled if it doesn't complete before the\n                /// timeout has expired.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.timeout_returnValue\">\n                /// A promise that is completed asynchronously after the specified timeout.\n                /// </returns>\n                /// </signature>\n                var to = timeout(time);\n                return promise ? timeoutWithPromise(to, promise) : to;\n            },\n            wrap: function Promise_wrap(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrap\">\n                /// <summary locid=\"WinJS.Promise.wrap\">\n                /// Wraps a non-promise value in a promise. You can use this function if you need\n                /// to pass a value to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.wrap_p:value\">\n                /// Some non-promise value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrap_returnValue\">\n                /// A promise that is successfully fulfilled with the specified value\n                /// </returns>\n                /// </signature>\n                return new CompletePromise(value);\n            },\n            wrapError: function Promise_wrapError(error) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrapError\">\n                /// <summary locid=\"WinJS.Promise.wrapError\">\n                /// Wraps a non-promise error value in a promise. You can use this function if you need\n                /// to pass an error to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"error\" locid=\"WinJS.Promise.wrapError_p:error\">\n                /// A non-promise error value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrapError_returnValue\">\n                /// A promise that is in an error state with the specified value.\n                /// </returns>\n                /// </signature>\n                return new ErrorPromise(error);\n            },\n\n            _veryExpensiveTagWithStack: {\n                get: function () { return tagWithStack; },\n                set: function (value) { tagWithStack = value; }\n            },\n            _veryExpensiveTagWithStack_tag: tag,\n            _getStack: function () {\n                if (_Global.Debug && _Global.Debug.debuggerEnabled) {\n                    try { throw new Error(); } catch (e) { return e.stack; }\n                }\n            },\n\n            _cancelBlocker: function Promise__cancelBlocker(input, oncancel) {\n                //\n                // Returns a promise which on cancelation will still result in downstream cancelation while\n                //  protecting the promise 'input' from being  canceled which has the effect of allowing\n                //  'input' to be shared amoung various consumers.\n                //\n                if (!Promise.is(input)) {\n                    return Promise.wrap(input);\n                }\n                var complete;\n                var error;\n                var output = new Promise(\n                    function (c, e) {\n                        complete = c;\n                        error = e;\n                    },\n                    function () {\n                        complete = null;\n                        error = null;\n                        oncancel && oncancel();\n                    }\n                );\n                input.then(\n                    function (v) { complete && complete(v); },\n                    function (e) { error && error(e); }\n                );\n                return output;\n            },\n\n        }\n    );\n    Object.defineProperties(Promise, _Events.createEventProperties(errorET));\n\n    Promise._doneHandler = function (value) {\n        _BaseCoreUtils._setImmediate(function Promise_done_rethrow() {\n            throw value;\n        });\n    };\n\n    return {\n        PromiseStateMachine: PromiseStateMachine,\n        Promise: Promise,\n        state_created: state_created\n    };\n});\n\n_winjs(\"WinJS/Promise\", [\"WinJS/Core/_Base\",\"WinJS/Promise/_StateMachine\"], function promiseInit( _Base, _StateMachine) {\n    \"use strict\";\n\n    _Base.Namespace.define(\"WinJS\", {\n        Promise: _StateMachine.Promise\n    });\n\n    return _StateMachine.Promise;\n});\n\n__winjs_exports = _modules[\"WinJS/Core/_WinJS\"];\n__winjs_exports.TPromise = __winjs_exports.Promise;\n__winjs_exports.PPromise = __winjs_exports.Promise;\n\n// ESM-comment-begin\n// if (typeof exports === 'undefined' && typeof define === 'function' && define.amd) {\n//     define([], __winjs_exports);\n// } else {\n//     module.exports = __winjs_exports;\n// }\n// ESM-comment-end\n\n})();\n\n// ESM-uncomment-begin\nexport var Promise = __winjs_exports.Promise;\nexport var TPromise = __winjs_exports.TPromise;\nexport var PPromise = __winjs_exports.PPromise;\n// ESM-uncomment-end\n"],"sourceRoot":""}