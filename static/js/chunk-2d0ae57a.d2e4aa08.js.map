{"version":3,"sources":["webpack:///./src/pages/ide/components/Cli/signals.js"],"names":["signals","methods","SIGNAL_REPORT_CONNECTED","sender","receiver","arguments","length","undefined","slot","event","kwargs","SIGNAL_REPORT_DISCONNECTED","SIGNAL_UPDATE_TREE","data","treeData","SIGNAL_UPDATE_FINDER","files","SIGNAL_LOCK","SIGNAL_UNLOCK","SIGNAL_SHOW_CODES","code","filename","this","getFilename","SIGNAL_SHOW_CODES_PMAX","SIGNAL_DEPENDS_ON_MEMORY_TO_GET_FILE","result","mf","fsize","SIGNAL_PUT_NEXT_FILE","SIGNAL_SHOW_SYS_INFO","SIGNAL_SHOW_MEMORY_STATUS","SIGNAL_SHOW_PANE"],"mappings":"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","file":"js/chunk-2d0ae57a.d2e4aa08.js","sourcesContent":["var signals = {\n  methods: {\n    SIGNAL_REPORT_CONNECTED(sender, receiver = 'bottomBar', slot = 'slotConnected') {\n      return {\n        event: \"reportConnected\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {}\n      }\n    },\n    SIGNAL_REPORT_DISCONNECTED(sender, receiver = 'bottomBar', slot = 'slotDisconnected') {\n      return {\n        event: \"reportDisconnected\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {}\n      }\n    },\n    SIGNAL_UPDATE_TREE(sender, data = null, receiver = 'folderTree', slot = 'slotUpdateTree') {\n      return {\n        event: \"updateTree\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {\n          treeData: data\n        }\n      }\n    },\n\n    SIGNAL_UPDATE_FINDER(sender, data = null, receiver = 'finder', slot = 'slotUpdateFiles') {\n      return {\n        event: \"updateTree\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {\n          files: data\n        }\n      }\n    },\n\n    SIGNAL_LOCK(sender, receiver = 'parent', slot = 'slotLock') {\n      return {\n        event: \"lock\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {}\n      }\n    },\n\n    SIGNAL_UNLOCK(sender, receiver = 'parent', slot = 'slotUnlock') {\n      return {\n        event: \"unlock\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {}\n      }\n    },\n\n    SIGNAL_SHOW_CODES(sender, data = null, receiver = 'editor', slot = \"slotShowCode\") {\n      return {\n        event: \"showCode\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {\n          code: data,\n          filename: this.getFilename\n        }\n      }\n    },\n\n    SIGNAL_SHOW_CODES_PMAX(sender, data = null, receiver = 'editor', slot = \"slotShowCode\") {\n      return {\n        event: \"showCode\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {\n          code: data.code,\n          filename: this.getFilename\n        }\n      }\n    },\n\n    SIGNAL_DEPENDS_ON_MEMORY_TO_GET_FILE(sender, result = null, receiver = 'self', slot = \"slotDependsOnMemoryToGetFile\") {\n      return {\n        event: \"dependsOnMemoryToGetFile\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {\n          mf: result.mf,\n          fsize: result.fsize,\n          filename: result.filename\n        }\n      }\n    },\n\n    SIGNAL_PUT_NEXT_FILE(sender, receiver = 'uploader', slot = \"slotNextFile\") {\n      return {\n        event: \"nextFile\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {}\n      }\n    },\n\n    SIGNAL_SHOW_SYS_INFO(sender, data, receiver = 'bottomBar', slot = \"slotShowSysInfo\") {\n      return {\n        event: \"ShowSysInfo\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {\n          data: data\n        }\n      }\n    },\n    SIGNAL_SHOW_MEMORY_STATUS(sender, data, receiver = 'bottomBar', slot = \"slotShowMemoryStatus\") {\n      return {\n        event: \"ShowMemoryStatus\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {\n          data: data\n        }\n      }\n    },\n\n    SIGNAL_SHOW_PANE(sender, receiver = 'splitVertical', slot = 'slotShowPane') {\n      return {\n        event: \"showPane\",\n        sender: sender,\n        receiver: receiver,\n        slot: slot,\n        kwargs: {}\n      }\n    },\n\n  }\n}\n\nexport default signals\n"],"sourceRoot":""}