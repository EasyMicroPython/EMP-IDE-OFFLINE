{"version":3,"sources":["webpack:///./src/pages/ide/components/Cli/index.js","webpack:///./node_modules/_node-libs-browser@2.1.0@node-libs-browser/mock/process.js","webpack:///./node_modules/_path-browserify@0.0.0@path-browserify/index.js"],"names":["Cli","exports","nextTick","fn","setTimeout","platform","arch","execPath","title","pid","browser","env","argv","binding","name","Error","path","cwd","chdir","dir","__webpack_require__","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","process","normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","splitPathRe","splitPath","filename","exec","slice","filter","xs","f","res","push","resolvedPath","resolvedAbsolute","arguments","TypeError","charAt","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","prototype","call","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","result","root","basename","ext","extname","str","len"],"mappings":"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","file":"js/chunk-1e61c374.9b4cc142.js","sourcesContent":["import Cli from './Cli.vue'\n\nexport default Cli","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"],"sourceRoot":""}